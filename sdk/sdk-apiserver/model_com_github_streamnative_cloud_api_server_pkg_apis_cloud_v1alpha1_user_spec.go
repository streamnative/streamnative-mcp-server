// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec UserSpec defines the desired state of User
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec struct {
	Email string `json:"email"`
	Invitation *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation `json:"invitation,omitempty"`
	Name *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName `json:"name,omitempty"`
	Type *string `json:"type,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec(email string) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec{}
	this.Email = email
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec{}
	return &this
}

// GetEmail returns the Email field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetEmail() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Email
}

// GetEmailOk returns a tuple with the Email field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetEmailOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Email, true
}

// SetEmail sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) SetEmail(v string) {
	o.Email = v
}

// GetInvitation returns the Invitation field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetInvitation() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation {
	if o == nil || o.Invitation == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation
		return ret
	}
	return *o.Invitation
}

// GetInvitationOk returns a tuple with the Invitation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetInvitationOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation, bool) {
	if o == nil || o.Invitation == nil {
		return nil, false
	}
	return o.Invitation, true
}

// HasInvitation returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) HasInvitation() bool {
	if o != nil && o.Invitation != nil {
		return true
	}

	return false
}

// SetInvitation gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation and assigns it to the Invitation field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) SetInvitation(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Invitation) {
	o.Invitation = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetName() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName {
	if o == nil || o.Name == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetNameOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName and assigns it to the Name field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) SetName(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserName) {
	o.Name = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) SetType(v string) {
	o.Type = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["email"] = o.Email
	}
	if o.Invitation != nil {
		toSerialize["invitation"] = o.Invitation
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1UserSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


