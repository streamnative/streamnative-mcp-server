// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus struct {
	// Conditions is an array of current observed ZooKeeperSetOptionStatus conditions.
	Conditions []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition `json:"conditions,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) GetConditions() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition {
	if o == nil || o.Conditions == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) GetConditionsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) SetConditions(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2Condition) {
	o.Conditions = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2ZooKeeperSetOptionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


