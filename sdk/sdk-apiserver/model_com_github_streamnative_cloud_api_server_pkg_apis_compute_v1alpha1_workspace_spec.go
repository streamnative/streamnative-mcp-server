// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec WorkspaceSpec defines the desired state of Workspace
type ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec struct {
	FlinkBlobStorage *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage `json:"flinkBlobStorage,omitempty"`
	PoolRef ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef `json:"poolRef"`
	// PulsarClusterNames is the list of Pulsar clusters that the workspace will have access to.
	PulsarClusterNames []string `json:"pulsarClusterNames"`
	// UseExternalAccess is the flag to indicate whether the workspace will use external access.
	UseExternalAccess *bool `json:"useExternalAccess,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec(poolRef ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef, pulsarClusterNames []string) *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec{}
	this.PoolRef = poolRef
	this.PulsarClusterNames = pulsarClusterNames
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec{}
	return &this
}

// GetFlinkBlobStorage returns the FlinkBlobStorage field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetFlinkBlobStorage() ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage {
	if o == nil || o.FlinkBlobStorage == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage
		return ret
	}
	return *o.FlinkBlobStorage
}

// GetFlinkBlobStorageOk returns a tuple with the FlinkBlobStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetFlinkBlobStorageOk() (*ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage, bool) {
	if o == nil || o.FlinkBlobStorage == nil {
		return nil, false
	}
	return o.FlinkBlobStorage, true
}

// HasFlinkBlobStorage returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) HasFlinkBlobStorage() bool {
	if o != nil && o.FlinkBlobStorage != nil {
		return true
	}

	return false
}

// SetFlinkBlobStorage gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage and assigns it to the FlinkBlobStorage field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) SetFlinkBlobStorage(v ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1FlinkBlobStorage) {
	o.FlinkBlobStorage = &v
}

// GetPoolRef returns the PoolRef field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetPoolRef() ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef {
	if o == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef
		return ret
	}

	return o.PoolRef
}

// GetPoolRefOk returns a tuple with the PoolRef field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetPoolRefOk() (*ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolRef, true
}

// SetPoolRef sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) SetPoolRef(v ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1PoolRef) {
	o.PoolRef = v
}

// GetPulsarClusterNames returns the PulsarClusterNames field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetPulsarClusterNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.PulsarClusterNames
}

// GetPulsarClusterNamesOk returns a tuple with the PulsarClusterNames field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetPulsarClusterNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.PulsarClusterNames, true
}

// SetPulsarClusterNames sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) SetPulsarClusterNames(v []string) {
	o.PulsarClusterNames = v
}

// GetUseExternalAccess returns the UseExternalAccess field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetUseExternalAccess() bool {
	if o == nil || o.UseExternalAccess == nil {
		var ret bool
		return ret
	}
	return *o.UseExternalAccess
}

// GetUseExternalAccessOk returns a tuple with the UseExternalAccess field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) GetUseExternalAccessOk() (*bool, bool) {
	if o == nil || o.UseExternalAccess == nil {
		return nil, false
	}
	return o.UseExternalAccess, true
}

// HasUseExternalAccess returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) HasUseExternalAccess() bool {
	if o != nil && o.UseExternalAccess != nil {
		return true
	}

	return false
}

// SetUseExternalAccess gets a reference to the given bool and assigns it to the UseExternalAccess field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) SetUseExternalAccess(v bool) {
	o.UseExternalAccess = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlinkBlobStorage != nil {
		toSerialize["flinkBlobStorage"] = o.FlinkBlobStorage
	}
	if true {
		toSerialize["poolRef"] = o.PoolRef
	}
	if true {
		toSerialize["pulsarClusterNames"] = o.PulsarClusterNames
	}
	if o.UseExternalAccess != nil {
		toSerialize["useExternalAccess"] = o.UseExternalAccess
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1WorkspaceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


