// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus SubscriptionStatus defines the observed state of Subscription
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus struct {
	// Conditions is an array of current observed conditions.
	Conditions []V1Condition `json:"conditions,omitempty"`
	// the status of the subscription is designed to support billing agents, so it provides product and subscription items.
	Items []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem `json:"items,omitempty"`
	PendingSetupIntent *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference `json:"pendingSetupIntent,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetConditions() []V1Condition {
	if o == nil || o.Conditions == nil {
		var ret []V1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetConditionsOk() ([]V1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) SetConditions(v []V1Condition) {
	o.Conditions = v
}

// GetItems returns the Items field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetItems() []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem {
	if o == nil || o.Items == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem
		return ret
	}
	return o.Items
}

// GetItemsOk returns a tuple with the Items field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetItemsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem, bool) {
	if o == nil || o.Items == nil {
		return nil, false
	}
	return o.Items, true
}

// HasItems returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) HasItems() bool {
	if o != nil && o.Items != nil {
		return true
	}

	return false
}

// SetItems gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem and assigns it to the Items field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) SetItems(v []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatusSubscriptionItem) {
	o.Items = v
}

// GetPendingSetupIntent returns the PendingSetupIntent field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetPendingSetupIntent() ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference {
	if o == nil || o.PendingSetupIntent == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference
		return ret
	}
	return *o.PendingSetupIntent
}

// GetPendingSetupIntentOk returns a tuple with the PendingSetupIntent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) GetPendingSetupIntentOk() (*ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference, bool) {
	if o == nil || o.PendingSetupIntent == nil {
		return nil, false
	}
	return o.PendingSetupIntent, true
}

// HasPendingSetupIntent returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) HasPendingSetupIntent() bool {
	if o != nil && o.PendingSetupIntent != nil {
		return true
	}

	return false
}

// SetPendingSetupIntent gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference and assigns it to the PendingSetupIntent field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) SetPendingSetupIntent(v ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SetupIntentReference) {
	o.PendingSetupIntent = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Items != nil {
		toSerialize["items"] = o.Items
	}
	if o.PendingSetupIntent != nil {
		toSerialize["pendingSetupIntent"] = o.PendingSetupIntent
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


