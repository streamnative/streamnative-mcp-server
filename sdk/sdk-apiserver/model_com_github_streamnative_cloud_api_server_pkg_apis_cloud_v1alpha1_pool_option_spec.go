//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec PoolOptionSpec defines a reference to a Pool
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec struct {
	CloudType string `json:"cloudType"`
	DeploymentType string `json:"deploymentType"`
	Features *map[string]bool `json:"features,omitempty"`
	Locations []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation `json:"locations"`
	PoolRef ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef `json:"poolRef"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec(cloudType string, deploymentType string, locations []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation, poolRef ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec{}
	this.CloudType = cloudType
	this.DeploymentType = deploymentType
	this.Locations = locations
	this.PoolRef = poolRef
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec{}
	return &this
}

// GetCloudType returns the CloudType field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetCloudType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetCloudTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CloudType, true
}

// SetCloudType sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) SetCloudType(v string) {
	o.CloudType = v
}

// GetDeploymentType returns the DeploymentType field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetDeploymentType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetDeploymentTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DeploymentType, true
}

// SetDeploymentType sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) SetDeploymentType(v string) {
	o.DeploymentType = v
}

// GetFeatures returns the Features field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetFeatures() map[string]bool {
	if o == nil || o.Features == nil {
		var ret map[string]bool
		return ret
	}
	return *o.Features
}

// GetFeaturesOk returns a tuple with the Features field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetFeaturesOk() (*map[string]bool, bool) {
	if o == nil || o.Features == nil {
		return nil, false
	}
	return o.Features, true
}

// HasFeatures returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) HasFeatures() bool {
	if o != nil && o.Features != nil {
		return true
	}

	return false
}

// SetFeatures gets a reference to the given map[string]bool and assigns it to the Features field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) SetFeatures(v map[string]bool) {
	o.Features = &v
}

// GetLocations returns the Locations field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetLocations() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation {
	if o == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation
		return ret
	}

	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetLocationsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation, bool) {
	if o == nil {
		return nil, false
	}
	return o.Locations, true
}

// SetLocations sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) SetLocations(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionLocation) {
	o.Locations = v
}

// GetPoolRef returns the PoolRef field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetPoolRef() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef {
	if o == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef
		return ret
	}

	return o.PoolRef
}

// GetPoolRefOk returns a tuple with the PoolRef field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) GetPoolRefOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PoolRef, true
}

// SetPoolRef sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) SetPoolRef(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolRef) {
	o.PoolRef = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["cloudType"] = o.CloudType
	}
	if true {
		toSerialize["deploymentType"] = o.DeploymentType
	}
	if o.Features != nil {
		toSerialize["features"] = o.Features
	}
	if true {
		toSerialize["locations"] = o.Locations
	}
	if true {
		toSerialize["poolRef"] = o.PoolRef
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolOptionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


