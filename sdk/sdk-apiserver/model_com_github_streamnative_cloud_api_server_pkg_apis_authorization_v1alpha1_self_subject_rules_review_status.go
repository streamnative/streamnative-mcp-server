// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus SelfSubjectRulesReviewStatus defines the observed state of SelfSubjectRulesReview
type ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus struct {
	// EvaluationError can appear in combination with Rules. It indicates an error occurred during rule evaluation, such as an authorizer that doesn't support rule evaluation, and that ResourceRules and/or NonResourceRules may be incomplete.
	EvaluationError *string `json:"evaluationError,omitempty"`
	// Incomplete is true when the rules returned by this call are incomplete. This is most commonly encountered when an authorizer, such as an external authorizer, doesn't support rules evaluation.
	Incomplete bool `json:"incomplete"`
	// ResourceRules is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
	ResourceRules []ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule `json:"resourceRules"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus(incomplete bool, resourceRules []ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus{}
	this.Incomplete = incomplete
	this.ResourceRules = resourceRules
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus{}
	return &this
}

// GetEvaluationError returns the EvaluationError field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetEvaluationError() string {
	if o == nil || o.EvaluationError == nil {
		var ret string
		return ret
	}
	return *o.EvaluationError
}

// GetEvaluationErrorOk returns a tuple with the EvaluationError field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetEvaluationErrorOk() (*string, bool) {
	if o == nil || o.EvaluationError == nil {
		return nil, false
	}
	return o.EvaluationError, true
}

// HasEvaluationError returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) HasEvaluationError() bool {
	if o != nil && o.EvaluationError != nil {
		return true
	}

	return false
}

// SetEvaluationError gets a reference to the given string and assigns it to the EvaluationError field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) SetEvaluationError(v string) {
	o.EvaluationError = &v
}

// GetIncomplete returns the Incomplete field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetIncomplete() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Incomplete
}

// GetIncompleteOk returns a tuple with the Incomplete field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetIncompleteOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Incomplete, true
}

// SetIncomplete sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) SetIncomplete(v bool) {
	o.Incomplete = v
}

// GetResourceRules returns the ResourceRules field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetResourceRules() []ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule {
	if o == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule
		return ret
	}

	return o.ResourceRules
}

// GetResourceRulesOk returns a tuple with the ResourceRules field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) GetResourceRulesOk() ([]ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule, bool) {
	if o == nil {
		return nil, false
	}
	return o.ResourceRules, true
}

// SetResourceRules sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) SetResourceRules(v []ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) {
	o.ResourceRules = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.EvaluationError != nil {
		toSerialize["evaluationError"] = o.EvaluationError
	}
	if true {
		toSerialize["incomplete"] = o.Incomplete
	}
	if true {
		toSerialize["resourceRules"] = o.ResourceRules
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus(val *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1SelfSubjectRulesReviewStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


