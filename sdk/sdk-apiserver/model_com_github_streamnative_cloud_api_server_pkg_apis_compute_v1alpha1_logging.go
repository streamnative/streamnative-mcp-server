//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging Logging defines the logging configuration for the Flink deployment.
type ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging struct {
	Log4j2ConfigurationTemplate *string `json:"log4j2ConfigurationTemplate,omitempty"`
	Log4jLoggers *map[string]string `json:"log4jLoggers,omitempty"`
	LoggingProfile *string `json:"loggingProfile,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1LoggingWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1LoggingWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging{}
	return &this
}

// GetLog4j2ConfigurationTemplate returns the Log4j2ConfigurationTemplate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLog4j2ConfigurationTemplate() string {
	if o == nil || o.Log4j2ConfigurationTemplate == nil {
		var ret string
		return ret
	}
	return *o.Log4j2ConfigurationTemplate
}

// GetLog4j2ConfigurationTemplateOk returns a tuple with the Log4j2ConfigurationTemplate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLog4j2ConfigurationTemplateOk() (*string, bool) {
	if o == nil || o.Log4j2ConfigurationTemplate == nil {
		return nil, false
	}
	return o.Log4j2ConfigurationTemplate, true
}

// HasLog4j2ConfigurationTemplate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) HasLog4j2ConfigurationTemplate() bool {
	if o != nil && o.Log4j2ConfigurationTemplate != nil {
		return true
	}

	return false
}

// SetLog4j2ConfigurationTemplate gets a reference to the given string and assigns it to the Log4j2ConfigurationTemplate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) SetLog4j2ConfigurationTemplate(v string) {
	o.Log4j2ConfigurationTemplate = &v
}

// GetLog4jLoggers returns the Log4jLoggers field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLog4jLoggers() map[string]string {
	if o == nil || o.Log4jLoggers == nil {
		var ret map[string]string
		return ret
	}
	return *o.Log4jLoggers
}

// GetLog4jLoggersOk returns a tuple with the Log4jLoggers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLog4jLoggersOk() (*map[string]string, bool) {
	if o == nil || o.Log4jLoggers == nil {
		return nil, false
	}
	return o.Log4jLoggers, true
}

// HasLog4jLoggers returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) HasLog4jLoggers() bool {
	if o != nil && o.Log4jLoggers != nil {
		return true
	}

	return false
}

// SetLog4jLoggers gets a reference to the given map[string]string and assigns it to the Log4jLoggers field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) SetLog4jLoggers(v map[string]string) {
	o.Log4jLoggers = &v
}

// GetLoggingProfile returns the LoggingProfile field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLoggingProfile() string {
	if o == nil || o.LoggingProfile == nil {
		var ret string
		return ret
	}
	return *o.LoggingProfile
}

// GetLoggingProfileOk returns a tuple with the LoggingProfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) GetLoggingProfileOk() (*string, bool) {
	if o == nil || o.LoggingProfile == nil {
		return nil, false
	}
	return o.LoggingProfile, true
}

// HasLoggingProfile returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) HasLoggingProfile() bool {
	if o != nil && o.LoggingProfile != nil {
		return true
	}

	return false
}

// SetLoggingProfile gets a reference to the given string and assigns it to the LoggingProfile field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) SetLoggingProfile(v string) {
	o.LoggingProfile = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Log4j2ConfigurationTemplate != nil {
		toSerialize["log4j2ConfigurationTemplate"] = o.Log4j2ConfigurationTemplate
	}
	if o.Log4jLoggers != nil {
		toSerialize["log4jLoggers"] = o.Log4jLoggers
	}
	if o.LoggingProfile != nil {
		toSerialize["loggingProfile"] = o.LoggingProfile
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) Get() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) Set(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Logging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


