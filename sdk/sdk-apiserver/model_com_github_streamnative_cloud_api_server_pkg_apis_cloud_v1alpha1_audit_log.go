//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog struct {
	Categories []string `json:"categories"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog(categories []string) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog{}
	this.Categories = categories
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLogWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLogWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog{}
	return &this
}

// GetCategories returns the Categories field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) GetCategories() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Categories
}

// GetCategoriesOk returns a tuple with the Categories field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) GetCategoriesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Categories, true
}

// SetCategories sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) SetCategories(v []string) {
	o.Categories = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["categories"] = o.Categories
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


