//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
	"time"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus APIKeyStatus defines the observed state of ServiceAccount
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus struct {
	// Conditions is an array of current observed service account conditions.
	Conditions []V1Condition `json:"conditions,omitempty"`
	EncryptedToken *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken `json:"encryptedToken,omitempty"`
	// ExpiresAt is a timestamp of when the key expires
	ExpiresAt *time.Time `json:"expiresAt,omitempty"`
	// IssuedAt is a timestamp of when the key was issued, stored as an epoch in seconds
	IssuedAt *time.Time `json:"issuedAt,omitempty"`
	// KeyId is a generated field that is a uid for the token
	KeyId *string `json:"keyId,omitempty"`
	// ExpiresAt is a timestamp of when the key was revoked, it triggers revocation action
	RevokedAt *time.Time `json:"revokedAt,omitempty"`
	// Token is the plaintext security token issued for the key.
	Token *string `json:"token,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus{}
	return &this
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetConditions() []V1Condition {
	if o == nil || o.Conditions == nil {
		var ret []V1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetConditionsOk() ([]V1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetConditions(v []V1Condition) {
	o.Conditions = v
}

// GetEncryptedToken returns the EncryptedToken field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetEncryptedToken() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken {
	if o == nil || o.EncryptedToken == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken
		return ret
	}
	return *o.EncryptedToken
}

// GetEncryptedTokenOk returns a tuple with the EncryptedToken field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetEncryptedTokenOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken, bool) {
	if o == nil || o.EncryptedToken == nil {
		return nil, false
	}
	return o.EncryptedToken, true
}

// HasEncryptedToken returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasEncryptedToken() bool {
	if o != nil && o.EncryptedToken != nil {
		return true
	}

	return false
}

// SetEncryptedToken gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken and assigns it to the EncryptedToken field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetEncryptedToken(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1EncryptedToken) {
	o.EncryptedToken = &v
}

// GetExpiresAt returns the ExpiresAt field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetExpiresAt() time.Time {
	if o == nil || o.ExpiresAt == nil {
		var ret time.Time
		return ret
	}
	return *o.ExpiresAt
}

// GetExpiresAtOk returns a tuple with the ExpiresAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetExpiresAtOk() (*time.Time, bool) {
	if o == nil || o.ExpiresAt == nil {
		return nil, false
	}
	return o.ExpiresAt, true
}

// HasExpiresAt returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasExpiresAt() bool {
	if o != nil && o.ExpiresAt != nil {
		return true
	}

	return false
}

// SetExpiresAt gets a reference to the given time.Time and assigns it to the ExpiresAt field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetExpiresAt(v time.Time) {
	o.ExpiresAt = &v
}

// GetIssuedAt returns the IssuedAt field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetIssuedAt() time.Time {
	if o == nil || o.IssuedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.IssuedAt
}

// GetIssuedAtOk returns a tuple with the IssuedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetIssuedAtOk() (*time.Time, bool) {
	if o == nil || o.IssuedAt == nil {
		return nil, false
	}
	return o.IssuedAt, true
}

// HasIssuedAt returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasIssuedAt() bool {
	if o != nil && o.IssuedAt != nil {
		return true
	}

	return false
}

// SetIssuedAt gets a reference to the given time.Time and assigns it to the IssuedAt field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetIssuedAt(v time.Time) {
	o.IssuedAt = &v
}

// GetKeyId returns the KeyId field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetKeyId() string {
	if o == nil || o.KeyId == nil {
		var ret string
		return ret
	}
	return *o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetKeyIdOk() (*string, bool) {
	if o == nil || o.KeyId == nil {
		return nil, false
	}
	return o.KeyId, true
}

// HasKeyId returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasKeyId() bool {
	if o != nil && o.KeyId != nil {
		return true
	}

	return false
}

// SetKeyId gets a reference to the given string and assigns it to the KeyId field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetKeyId(v string) {
	o.KeyId = &v
}

// GetRevokedAt returns the RevokedAt field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetRevokedAt() time.Time {
	if o == nil || o.RevokedAt == nil {
		var ret time.Time
		return ret
	}
	return *o.RevokedAt
}

// GetRevokedAtOk returns a tuple with the RevokedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetRevokedAtOk() (*time.Time, bool) {
	if o == nil || o.RevokedAt == nil {
		return nil, false
	}
	return o.RevokedAt, true
}

// HasRevokedAt returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasRevokedAt() bool {
	if o != nil && o.RevokedAt != nil {
		return true
	}

	return false
}

// SetRevokedAt gets a reference to the given time.Time and assigns it to the RevokedAt field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetRevokedAt(v time.Time) {
	o.RevokedAt = &v
}

// GetToken returns the Token field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetToken() string {
	if o == nil || o.Token == nil {
		var ret string
		return ret
	}
	return *o.Token
}

// GetTokenOk returns a tuple with the Token field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) GetTokenOk() (*string, bool) {
	if o == nil || o.Token == nil {
		return nil, false
	}
	return o.Token, true
}

// HasToken returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) HasToken() bool {
	if o != nil && o.Token != nil {
		return true
	}

	return false
}

// SetToken gets a reference to the given string and assigns it to the Token field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) SetToken(v string) {
	o.Token = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.EncryptedToken != nil {
		toSerialize["encryptedToken"] = o.EncryptedToken
	}
	if o.ExpiresAt != nil {
		toSerialize["expiresAt"] = o.ExpiresAt
	}
	if o.IssuedAt != nil {
		toSerialize["issuedAt"] = o.IssuedAt
	}
	if o.KeyId != nil {
		toSerialize["keyId"] = o.KeyId
	}
	if o.RevokedAt != nil {
		toSerialize["revokedAt"] = o.RevokedAt
	}
	if o.Token != nil {
		toSerialize["token"] = o.Token
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1APIKeyStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


