// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier struct for ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier struct {
	// FlatAmount is the flat billing amount for an entire tier, regardless of the number of units in the tier, in dollars.
	FlatAmount *string `json:"flatAmount,omitempty"`
	// UnitAmount is the per-unit billing amount for each individual unit for which this tier applies, in dollars.
	UnitAmount *string `json:"unitAmount,omitempty"`
	// UpTo specifies the upper bound of this tier. The lower bound of a tier is the upper bound of the previous tier adding one. Use `inf` to define a fallback tier.
	UpTo *string `json:"upTo,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1TierWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1TierWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier{}
	return &this
}

// GetFlatAmount returns the FlatAmount field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetFlatAmount() string {
	if o == nil || o.FlatAmount == nil {
		var ret string
		return ret
	}
	return *o.FlatAmount
}

// GetFlatAmountOk returns a tuple with the FlatAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetFlatAmountOk() (*string, bool) {
	if o == nil || o.FlatAmount == nil {
		return nil, false
	}
	return o.FlatAmount, true
}

// HasFlatAmount returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) HasFlatAmount() bool {
	if o != nil && o.FlatAmount != nil {
		return true
	}

	return false
}

// SetFlatAmount gets a reference to the given string and assigns it to the FlatAmount field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) SetFlatAmount(v string) {
	o.FlatAmount = &v
}

// GetUnitAmount returns the UnitAmount field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetUnitAmount() string {
	if o == nil || o.UnitAmount == nil {
		var ret string
		return ret
	}
	return *o.UnitAmount
}

// GetUnitAmountOk returns a tuple with the UnitAmount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetUnitAmountOk() (*string, bool) {
	if o == nil || o.UnitAmount == nil {
		return nil, false
	}
	return o.UnitAmount, true
}

// HasUnitAmount returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) HasUnitAmount() bool {
	if o != nil && o.UnitAmount != nil {
		return true
	}

	return false
}

// SetUnitAmount gets a reference to the given string and assigns it to the UnitAmount field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) SetUnitAmount(v string) {
	o.UnitAmount = &v
}

// GetUpTo returns the UpTo field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetUpTo() string {
	if o == nil || o.UpTo == nil {
		var ret string
		return ret
	}
	return *o.UpTo
}

// GetUpToOk returns a tuple with the UpTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) GetUpToOk() (*string, bool) {
	if o == nil || o.UpTo == nil {
		return nil, false
	}
	return o.UpTo, true
}

// HasUpTo returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) HasUpTo() bool {
	if o != nil && o.UpTo != nil {
		return true
	}

	return false
}

// SetUpTo gets a reference to the given string and assigns it to the UpTo field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) SetUpTo(v string) {
	o.UpTo = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.FlatAmount != nil {
		toSerialize["flatAmount"] = o.FlatAmount
	}
	if o.UnitAmount != nil {
		toSerialize["unitAmount"] = o.UnitAmount
	}
	if o.UpTo != nil {
		toSerialize["upTo"] = o.UpTo
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1Tier) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


