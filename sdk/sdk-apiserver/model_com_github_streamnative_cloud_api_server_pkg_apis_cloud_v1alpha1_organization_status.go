//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus OrganizationStatus defines the observed state of Organization
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus struct {
	// reconciled parent of this organization. if spec.BillingParent is set but status.BillingParent is not set, then reconciler will create a parent child relationship if spec.BillingParent is not set but status.BillingParent is set, then reconciler will delete parent child relationship if spec.BillingParent is set but status.BillingParent is set and same, then reconciler will do nothing if spec.BillingParent is set but status.Billingparent is set and different, then reconciler will delete status.Billingparent relationship and create new spec.BillingParent relationship
	BillingParent *string `json:"billingParent,omitempty"`
	// Conditions is an array of current observed conditions.
	Conditions []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition `json:"conditions,omitempty"`
	// Indicates the active subscription for this organization. This information is available when the Subscribed condition is true.
	SubscriptionName *string `json:"subscriptionName,omitempty"`
	// returns support plan of current subscription.  blank, implies either no support plan or legacy support
	SupportPlan *string `json:"supportPlan,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus{}
	return &this
}

// GetBillingParent returns the BillingParent field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetBillingParent() string {
	if o == nil || o.BillingParent == nil {
		var ret string
		return ret
	}
	return *o.BillingParent
}

// GetBillingParentOk returns a tuple with the BillingParent field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetBillingParentOk() (*string, bool) {
	if o == nil || o.BillingParent == nil {
		return nil, false
	}
	return o.BillingParent, true
}

// HasBillingParent returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) HasBillingParent() bool {
	if o != nil && o.BillingParent != nil {
		return true
	}

	return false
}

// SetBillingParent gets a reference to the given string and assigns it to the BillingParent field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) SetBillingParent(v string) {
	o.BillingParent = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetConditions() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition {
	if o == nil || o.Conditions == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetConditionsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) SetConditions(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition) {
	o.Conditions = v
}

// GetSubscriptionName returns the SubscriptionName field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetSubscriptionName() string {
	if o == nil || o.SubscriptionName == nil {
		var ret string
		return ret
	}
	return *o.SubscriptionName
}

// GetSubscriptionNameOk returns a tuple with the SubscriptionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetSubscriptionNameOk() (*string, bool) {
	if o == nil || o.SubscriptionName == nil {
		return nil, false
	}
	return o.SubscriptionName, true
}

// HasSubscriptionName returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) HasSubscriptionName() bool {
	if o != nil && o.SubscriptionName != nil {
		return true
	}

	return false
}

// SetSubscriptionName gets a reference to the given string and assigns it to the SubscriptionName field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) SetSubscriptionName(v string) {
	o.SubscriptionName = &v
}

// GetSupportPlan returns the SupportPlan field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetSupportPlan() string {
	if o == nil || o.SupportPlan == nil {
		var ret string
		return ret
	}
	return *o.SupportPlan
}

// GetSupportPlanOk returns a tuple with the SupportPlan field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) GetSupportPlanOk() (*string, bool) {
	if o == nil || o.SupportPlan == nil {
		return nil, false
	}
	return o.SupportPlan, true
}

// HasSupportPlan returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) HasSupportPlan() bool {
	if o != nil && o.SupportPlan != nil {
		return true
	}

	return false
}

// SetSupportPlan gets a reference to the given string and assigns it to the SupportPlan field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) SetSupportPlan(v string) {
	o.SupportPlan = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BillingParent != nil {
		toSerialize["billingParent"] = o.BillingParent
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.SubscriptionName != nil {
		toSerialize["subscriptionName"] = o.SubscriptionName
	}
	if o.SupportPlan != nil {
		toSerialize["supportPlan"] = o.SupportPlan
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OrganizationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


