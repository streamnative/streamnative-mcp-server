//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig struct {
	Namespaces []string `json:"namespaces"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig(namespaces []string) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig{}
	this.Namespaces = namespaces
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfigWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfigWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig{}
	return &this
}

// GetNamespaces returns the Namespaces field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) GetNamespaces() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Namespaces
}

// GetNamespacesOk returns a tuple with the Namespaces field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) GetNamespacesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Namespaces, true
}

// SetNamespaces sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) SetNamespaces(v []string) {
	o.Namespaces = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["namespaces"] = o.Namespaces
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


