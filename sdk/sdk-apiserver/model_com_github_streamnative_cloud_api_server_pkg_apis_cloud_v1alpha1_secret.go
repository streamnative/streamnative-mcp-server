// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret Secret
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	// the value should be base64 encoded
	Data *map[string]string `json:"data,omitempty"`
	InstanceName string `json:"instanceName"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	Location string `json:"location"`
	Metadata *V1ObjectMeta `json:"metadata,omitempty"`
	PoolMemberRef *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference `json:"poolMemberRef,omitempty"`
	Spec map[string]interface{} `json:"spec,omitempty"`
	Status map[string]interface{} `json:"status,omitempty"`
	Tolerations []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration `json:"tolerations,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret(instanceName string, location string) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret{}
	this.InstanceName = instanceName
	this.Location = location
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SecretWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SecretWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetApiVersion() string {
	if o == nil || o.ApiVersion == nil {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetApiVersionOk() (*string, bool) {
	if o == nil || o.ApiVersion == nil {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasApiVersion() bool {
	if o != nil && o.ApiVersion != nil {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetData returns the Data field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetData() map[string]string {
	if o == nil || o.Data == nil {
		var ret map[string]string
		return ret
	}
	return *o.Data
}

// GetDataOk returns a tuple with the Data field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetDataOk() (*map[string]string, bool) {
	if o == nil || o.Data == nil {
		return nil, false
	}
	return o.Data, true
}

// HasData returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasData() bool {
	if o != nil && o.Data != nil {
		return true
	}

	return false
}

// SetData gets a reference to the given map[string]string and assigns it to the Data field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetData(v map[string]string) {
	o.Data = &v
}

// GetInstanceName returns the InstanceName field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetInstanceName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.InstanceName
}

// GetInstanceNameOk returns a tuple with the InstanceName field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetInstanceNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InstanceName, true
}

// SetInstanceName sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetInstanceName(v string) {
	o.InstanceName = v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetKind() string {
	if o == nil || o.Kind == nil {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetKindOk() (*string, bool) {
	if o == nil || o.Kind == nil {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasKind() bool {
	if o != nil && o.Kind != nil {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetKind(v string) {
	o.Kind = &v
}

// GetLocation returns the Location field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetLocation() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Location
}

// GetLocationOk returns a tuple with the Location field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetLocationOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Location, true
}

// SetLocation sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetLocation(v string) {
	o.Location = v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetMetadata() V1ObjectMeta {
	if o == nil || o.Metadata == nil {
		var ret V1ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetMetadataOk() (*V1ObjectMeta, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V1ObjectMeta and assigns it to the Metadata field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetMetadata(v V1ObjectMeta) {
	o.Metadata = &v
}

// GetPoolMemberRef returns the PoolMemberRef field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetPoolMemberRef() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference {
	if o == nil || o.PoolMemberRef == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference
		return ret
	}
	return *o.PoolMemberRef
}

// GetPoolMemberRefOk returns a tuple with the PoolMemberRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetPoolMemberRefOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference, bool) {
	if o == nil || o.PoolMemberRef == nil {
		return nil, false
	}
	return o.PoolMemberRef, true
}

// HasPoolMemberRef returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasPoolMemberRef() bool {
	if o != nil && o.PoolMemberRef != nil {
		return true
	}

	return false
}

// SetPoolMemberRef gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference and assigns it to the PoolMemberRef field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetPoolMemberRef(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolMemberReference) {
	o.PoolMemberRef = &v
}

// GetSpec returns the Spec field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetSpec() map[string]interface{} {
	if o == nil || o.Spec == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetSpecOk() (map[string]interface{}, bool) {
	if o == nil || o.Spec == nil {
		return nil, false
	}
	return o.Spec, true
}

// HasSpec returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasSpec() bool {
	if o != nil && o.Spec != nil {
		return true
	}

	return false
}

// SetSpec gets a reference to the given map[string]interface{} and assigns it to the Spec field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetSpec(v map[string]interface{}) {
	o.Spec = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetStatus() map[string]interface{} {
	if o == nil || o.Status == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetStatusOk() (map[string]interface{}, bool) {
	if o == nil || o.Status == nil {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasStatus() bool {
	if o != nil && o.Status != nil {
		return true
	}

	return false
}

// SetStatus gets a reference to the given map[string]interface{} and assigns it to the Status field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetStatus(v map[string]interface{}) {
	o.Status = v
}

// GetTolerations returns the Tolerations field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetTolerations() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration {
	if o == nil || o.Tolerations == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration
		return ret
	}
	return o.Tolerations
}

// GetTolerationsOk returns a tuple with the Tolerations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) GetTolerationsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration, bool) {
	if o == nil || o.Tolerations == nil {
		return nil, false
	}
	return o.Tolerations, true
}

// HasTolerations returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) HasTolerations() bool {
	if o != nil && o.Tolerations != nil {
		return true
	}

	return false
}

// SetTolerations gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration and assigns it to the Tolerations field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) SetTolerations(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Toleration) {
	o.Tolerations = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiVersion != nil {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	if true {
		toSerialize["instanceName"] = o.InstanceName
	}
	if o.Kind != nil {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["location"] = o.Location
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.PoolMemberRef != nil {
		toSerialize["poolMemberRef"] = o.PoolMemberRef
	}
	if o.Spec != nil {
		toSerialize["spec"] = o.Spec
	}
	if o.Status != nil {
		toSerialize["status"] = o.Status
	}
	if o.Tolerations != nil {
		toSerialize["tolerations"] = o.Tolerations
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Secret) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


