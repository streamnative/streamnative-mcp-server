// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
	"time"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec PrivateOfferSpec defines the desired state of PrivateOffer
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec struct {
	// AnchorDate is a timestamp representing the first billing cycle end date. This will be used to anchor future billing periods to that date. For example, setting the anchor date for a subscription starting on Apr 1 to be Apr 12 will send the invoice for the subscription out on Apr 12 and the 12th of every following month for a monthly subscription. It is represented in RFC3339 form and is in UTC.
	AnchorDate *time.Time `json:"anchorDate,omitempty"`
	Description *string `json:"description,omitempty"`
	// Duration indicates how long the subscription for this offer should last. The value must greater than 0
	Duration *string `json:"duration,omitempty"`
	// EndDate is a timestamp representing the planned end date of the subscription. It is represented in RFC3339 form and is in UTC.
	EndDate *time.Time `json:"endDate,omitempty"`
	// One-time items, each with an attached price.
	Once []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem `json:"once,omitempty"`
	// Recurring items, each with an attached price.
	Recurring []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem `json:"recurring,omitempty"`
	// StartDate is a timestamp representing the planned start date of the subscription. It is represented in RFC3339 form and is in UTC.
	StartDate *time.Time `json:"startDate,omitempty"`
	Stripe map[string]interface{} `json:"stripe,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec{}
	return &this
}

// GetAnchorDate returns the AnchorDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetAnchorDate() time.Time {
	if o == nil || o.AnchorDate == nil {
		var ret time.Time
		return ret
	}
	return *o.AnchorDate
}

// GetAnchorDateOk returns a tuple with the AnchorDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetAnchorDateOk() (*time.Time, bool) {
	if o == nil || o.AnchorDate == nil {
		return nil, false
	}
	return o.AnchorDate, true
}

// HasAnchorDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasAnchorDate() bool {
	if o != nil && o.AnchorDate != nil {
		return true
	}

	return false
}

// SetAnchorDate gets a reference to the given time.Time and assigns it to the AnchorDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetAnchorDate(v time.Time) {
	o.AnchorDate = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetDescription(v string) {
	o.Description = &v
}

// GetDuration returns the Duration field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetDuration() string {
	if o == nil || o.Duration == nil {
		var ret string
		return ret
	}
	return *o.Duration
}

// GetDurationOk returns a tuple with the Duration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetDurationOk() (*string, bool) {
	if o == nil || o.Duration == nil {
		return nil, false
	}
	return o.Duration, true
}

// HasDuration returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasDuration() bool {
	if o != nil && o.Duration != nil {
		return true
	}

	return false
}

// SetDuration gets a reference to the given string and assigns it to the Duration field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetDuration(v string) {
	o.Duration = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetOnce returns the Once field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetOnce() []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem {
	if o == nil || o.Once == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem
		return ret
	}
	return o.Once
}

// GetOnceOk returns a tuple with the Once field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetOnceOk() ([]ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem, bool) {
	if o == nil || o.Once == nil {
		return nil, false
	}
	return o.Once, true
}

// HasOnce returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasOnce() bool {
	if o != nil && o.Once != nil {
		return true
	}

	return false
}

// SetOnce gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem and assigns it to the Once field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetOnce(v []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem) {
	o.Once = v
}

// GetRecurring returns the Recurring field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetRecurring() []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem {
	if o == nil || o.Recurring == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem
		return ret
	}
	return o.Recurring
}

// GetRecurringOk returns a tuple with the Recurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetRecurringOk() ([]ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem, bool) {
	if o == nil || o.Recurring == nil {
		return nil, false
	}
	return o.Recurring, true
}

// HasRecurring returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasRecurring() bool {
	if o != nil && o.Recurring != nil {
		return true
	}

	return false
}

// SetRecurring gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem and assigns it to the Recurring field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetRecurring(v []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItem) {
	o.Recurring = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetStripe returns the Stripe field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetStripe() map[string]interface{} {
	if o == nil || o.Stripe == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Stripe
}

// GetStripeOk returns a tuple with the Stripe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) GetStripeOk() (map[string]interface{}, bool) {
	if o == nil || o.Stripe == nil {
		return nil, false
	}
	return o.Stripe, true
}

// HasStripe returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) HasStripe() bool {
	if o != nil && o.Stripe != nil {
		return true
	}

	return false
}

// SetStripe gets a reference to the given map[string]interface{} and assigns it to the Stripe field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) SetStripe(v map[string]interface{}) {
	o.Stripe = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnchorDate != nil {
		toSerialize["anchorDate"] = o.AnchorDate
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.Duration != nil {
		toSerialize["duration"] = o.Duration
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.Once != nil {
		toSerialize["once"] = o.Once
	}
	if o.Recurring != nil {
		toSerialize["recurring"] = o.Recurring
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Stripe != nil {
		toSerialize["stripe"] = o.Stripe
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1PrivateOfferSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


