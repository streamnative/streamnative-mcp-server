//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus PulsarClusterStatus defines the observed state of PulsarCluster
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus struct {
	Bookkeeper *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus `json:"bookkeeper,omitempty"`
	Broker *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus `json:"broker,omitempty"`
	// Conditions is an array of current observed conditions.
	Conditions []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition `json:"conditions,omitempty"`
	// Deployment type set via associated pool
	DeploymentType *string `json:"deploymentType,omitempty"`
	// Instance type, i.e. serverless or default
	InstanceType *string `json:"instanceType,omitempty"`
	Oxia *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus `json:"oxia,omitempty"`
	RbacStatus *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus `json:"rbacStatus,omitempty"`
	Zookeeper *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus `json:"zookeeper,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus{}
	return &this
}

// GetBookkeeper returns the Bookkeeper field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetBookkeeper() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus {
	if o == nil || o.Bookkeeper == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus
		return ret
	}
	return *o.Bookkeeper
}

// GetBookkeeperOk returns a tuple with the Bookkeeper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetBookkeeperOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus, bool) {
	if o == nil || o.Bookkeeper == nil {
		return nil, false
	}
	return o.Bookkeeper, true
}

// HasBookkeeper returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasBookkeeper() bool {
	if o != nil && o.Bookkeeper != nil {
		return true
	}

	return false
}

// SetBookkeeper gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus and assigns it to the Bookkeeper field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetBookkeeper(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus) {
	o.Bookkeeper = &v
}

// GetBroker returns the Broker field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetBroker() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus {
	if o == nil || o.Broker == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus
		return ret
	}
	return *o.Broker
}

// GetBrokerOk returns a tuple with the Broker field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetBrokerOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus, bool) {
	if o == nil || o.Broker == nil {
		return nil, false
	}
	return o.Broker, true
}

// HasBroker returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasBroker() bool {
	if o != nil && o.Broker != nil {
		return true
	}

	return false
}

// SetBroker gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus and assigns it to the Broker field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetBroker(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus) {
	o.Broker = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetConditions() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition {
	if o == nil || o.Conditions == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetConditionsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetConditions(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Condition) {
	o.Conditions = v
}

// GetDeploymentType returns the DeploymentType field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetDeploymentType() string {
	if o == nil || o.DeploymentType == nil {
		var ret string
		return ret
	}
	return *o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetDeploymentTypeOk() (*string, bool) {
	if o == nil || o.DeploymentType == nil {
		return nil, false
	}
	return o.DeploymentType, true
}

// HasDeploymentType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasDeploymentType() bool {
	if o != nil && o.DeploymentType != nil {
		return true
	}

	return false
}

// SetDeploymentType gets a reference to the given string and assigns it to the DeploymentType field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetDeploymentType(v string) {
	o.DeploymentType = &v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetInstanceType() string {
	if o == nil || o.InstanceType == nil {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetInstanceTypeOk() (*string, bool) {
	if o == nil || o.InstanceType == nil {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasInstanceType() bool {
	if o != nil && o.InstanceType != nil {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetOxia returns the Oxia field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetOxia() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus {
	if o == nil || o.Oxia == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus
		return ret
	}
	return *o.Oxia
}

// GetOxiaOk returns a tuple with the Oxia field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetOxiaOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus, bool) {
	if o == nil || o.Oxia == nil {
		return nil, false
	}
	return o.Oxia, true
}

// HasOxia returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasOxia() bool {
	if o != nil && o.Oxia != nil {
		return true
	}

	return false
}

// SetOxia gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus and assigns it to the Oxia field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetOxia(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus) {
	o.Oxia = &v
}

// GetRbacStatus returns the RbacStatus field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetRbacStatus() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus {
	if o == nil || o.RbacStatus == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus
		return ret
	}
	return *o.RbacStatus
}

// GetRbacStatusOk returns a tuple with the RbacStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetRbacStatusOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus, bool) {
	if o == nil || o.RbacStatus == nil {
		return nil, false
	}
	return o.RbacStatus, true
}

// HasRbacStatus returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasRbacStatus() bool {
	if o != nil && o.RbacStatus != nil {
		return true
	}

	return false
}

// SetRbacStatus gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus and assigns it to the RbacStatus field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetRbacStatus(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RBACStatus) {
	o.RbacStatus = &v
}

// GetZookeeper returns the Zookeeper field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetZookeeper() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus {
	if o == nil || o.Zookeeper == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus
		return ret
	}
	return *o.Zookeeper
}

// GetZookeeperOk returns a tuple with the Zookeeper field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) GetZookeeperOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus, bool) {
	if o == nil || o.Zookeeper == nil {
		return nil, false
	}
	return o.Zookeeper, true
}

// HasZookeeper returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) HasZookeeper() bool {
	if o != nil && o.Zookeeper != nil {
		return true
	}

	return false
}

// SetZookeeper gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus and assigns it to the Zookeeper field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) SetZookeeper(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterComponentStatus) {
	o.Zookeeper = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Bookkeeper != nil {
		toSerialize["bookkeeper"] = o.Bookkeeper
	}
	if o.Broker != nil {
		toSerialize["broker"] = o.Broker
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.DeploymentType != nil {
		toSerialize["deploymentType"] = o.DeploymentType
	}
	if o.InstanceType != nil {
		toSerialize["instanceType"] = o.InstanceType
	}
	if o.Oxia != nil {
		toSerialize["oxia"] = o.Oxia
	}
	if o.RbacStatus != nil {
		toSerialize["rbacStatus"] = o.RbacStatus
	}
	if o.Zookeeper != nil {
		toSerialize["zookeeper"] = o.Zookeeper
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarClusterStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


