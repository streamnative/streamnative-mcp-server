// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule ResourceRule is the list of actions the subject is allowed to perform on resources. The list ordering isn't significant, may contain duplicates, and possibly be incomplete.
type ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule struct {
	// APIGroups is the name of the APIGroup that contains the resources.  If multiple API groups are specified, any action requested against one of the enumerated resources in any API group will be allowed.  \"*\" means all.
	ApiGroups []string `json:"apiGroups,omitempty"`
	// ResourceNames is an optional white list of names that the rule applies to.  An empty set means that everything is allowed.  \"*\" means all.
	ResourceNames []string `json:"resourceNames,omitempty"`
	// Resources is a list of resources this rule applies to.  \"*\" means all in the specified apiGroups.  \"*_/foo\" represents the subresource 'foo' for all resources in the specified apiGroups.
	Resources []string `json:"resources,omitempty"`
	// Verb is a list of kubernetes resource API verbs, like: get, list, watch, create, update, delete, proxy.  \"*\" means all.
	Verbs []string `json:"verbs"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule instantiates a new ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule(verbs []string) *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule {
	this := ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule{}
	this.Verbs = verbs
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRuleWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRuleWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule {
	this := ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule{}
	return &this
}

// GetApiGroups returns the ApiGroups field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetApiGroups() []string {
	if o == nil || o.ApiGroups == nil {
		var ret []string
		return ret
	}
	return o.ApiGroups
}

// GetApiGroupsOk returns a tuple with the ApiGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetApiGroupsOk() ([]string, bool) {
	if o == nil || o.ApiGroups == nil {
		return nil, false
	}
	return o.ApiGroups, true
}

// HasApiGroups returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) HasApiGroups() bool {
	if o != nil && o.ApiGroups != nil {
		return true
	}

	return false
}

// SetApiGroups gets a reference to the given []string and assigns it to the ApiGroups field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) SetApiGroups(v []string) {
	o.ApiGroups = v
}

// GetResourceNames returns the ResourceNames field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetResourceNames() []string {
	if o == nil || o.ResourceNames == nil {
		var ret []string
		return ret
	}
	return o.ResourceNames
}

// GetResourceNamesOk returns a tuple with the ResourceNames field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetResourceNamesOk() ([]string, bool) {
	if o == nil || o.ResourceNames == nil {
		return nil, false
	}
	return o.ResourceNames, true
}

// HasResourceNames returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) HasResourceNames() bool {
	if o != nil && o.ResourceNames != nil {
		return true
	}

	return false
}

// SetResourceNames gets a reference to the given []string and assigns it to the ResourceNames field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) SetResourceNames(v []string) {
	o.ResourceNames = v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetResources() []string {
	if o == nil || o.Resources == nil {
		var ret []string
		return ret
	}
	return o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetResourcesOk() ([]string, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given []string and assigns it to the Resources field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) SetResources(v []string) {
	o.Resources = v
}

// GetVerbs returns the Verbs field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetVerbs() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Verbs
}

// GetVerbsOk returns a tuple with the Verbs field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) GetVerbsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Verbs, true
}

// SetVerbs sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) SetVerbs(v []string) {
	o.Verbs = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ApiGroups != nil {
		toSerialize["apiGroups"] = o.ApiGroups
	}
	if o.ResourceNames != nil {
		toSerialize["resourceNames"] = o.ResourceNames
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if true {
		toSerialize["verbs"] = o.Verbs
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) Get() *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) Set(val *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule(val *ComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisAuthorizationV1alpha1ResourceRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


