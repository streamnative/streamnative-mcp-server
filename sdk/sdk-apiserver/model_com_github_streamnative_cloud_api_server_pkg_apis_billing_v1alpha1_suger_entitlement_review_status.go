// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus struct for ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus struct {
	// BuyerID is the ID of buyer associated with organization The first one will be returned when there are more than one are found.
	BuyerID *string `json:"buyerID,omitempty"`
	// Conditions is an array of current observed conditions.
	Conditions []V1Condition `json:"conditions,omitempty"`
	// Organization is the name of the organization matching the entitlement ID The first one will be returned when there are more than one are found.
	Organization *string `json:"organization,omitempty"`
	// Partner is the partner associated with organization
	Partner *string `json:"partner,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatusWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatusWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus{}
	return &this
}

// GetBuyerID returns the BuyerID field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetBuyerID() string {
	if o == nil || o.BuyerID == nil {
		var ret string
		return ret
	}
	return *o.BuyerID
}

// GetBuyerIDOk returns a tuple with the BuyerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetBuyerIDOk() (*string, bool) {
	if o == nil || o.BuyerID == nil {
		return nil, false
	}
	return o.BuyerID, true
}

// HasBuyerID returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) HasBuyerID() bool {
	if o != nil && o.BuyerID != nil {
		return true
	}

	return false
}

// SetBuyerID gets a reference to the given string and assigns it to the BuyerID field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) SetBuyerID(v string) {
	o.BuyerID = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetConditions() []V1Condition {
	if o == nil || o.Conditions == nil {
		var ret []V1Condition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetConditionsOk() ([]V1Condition, bool) {
	if o == nil || o.Conditions == nil {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) HasConditions() bool {
	if o != nil && o.Conditions != nil {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1Condition and assigns it to the Conditions field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) SetConditions(v []V1Condition) {
	o.Conditions = v
}

// GetOrganization returns the Organization field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetOrganization() string {
	if o == nil || o.Organization == nil {
		var ret string
		return ret
	}
	return *o.Organization
}

// GetOrganizationOk returns a tuple with the Organization field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetOrganizationOk() (*string, bool) {
	if o == nil || o.Organization == nil {
		return nil, false
	}
	return o.Organization, true
}

// HasOrganization returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) HasOrganization() bool {
	if o != nil && o.Organization != nil {
		return true
	}

	return false
}

// SetOrganization gets a reference to the given string and assigns it to the Organization field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) SetOrganization(v string) {
	o.Organization = &v
}

// GetPartner returns the Partner field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetPartner() string {
	if o == nil || o.Partner == nil {
		var ret string
		return ret
	}
	return *o.Partner
}

// GetPartnerOk returns a tuple with the Partner field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) GetPartnerOk() (*string, bool) {
	if o == nil || o.Partner == nil {
		return nil, false
	}
	return o.Partner, true
}

// HasPartner returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) HasPartner() bool {
	if o != nil && o.Partner != nil {
		return true
	}

	return false
}

// SetPartner gets a reference to the given string and assigns it to the Partner field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) SetPartner(v string) {
	o.Partner = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BuyerID != nil {
		toSerialize["buyerID"] = o.BuyerID
	}
	if o.Conditions != nil {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Organization != nil {
		toSerialize["organization"] = o.Organization
	}
	if o.Partner != nil {
		toSerialize["partner"] = o.Partner
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerEntitlementReviewStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


