//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec MonitorSetSpec defines the desired state of MonitorSet
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec struct {
	// AvailabilityMode decides whether servers should be in one zone or multiple zones If unspecified, defaults to zonal.
	AvailabilityMode *string `json:"availabilityMode,omitempty"`
	PoolMemberRef *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference `json:"poolMemberRef,omitempty"`
	// Replicas is the desired number of monitoring servers. If unspecified, defaults to 1.
	Replicas *int32 `json:"replicas,omitempty"`
	Selector *V1LabelSelector `json:"selector,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec{}
	return &this
}

// GetAvailabilityMode returns the AvailabilityMode field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetAvailabilityMode() string {
	if o == nil || o.AvailabilityMode == nil {
		var ret string
		return ret
	}
	return *o.AvailabilityMode
}

// GetAvailabilityModeOk returns a tuple with the AvailabilityMode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetAvailabilityModeOk() (*string, bool) {
	if o == nil || o.AvailabilityMode == nil {
		return nil, false
	}
	return o.AvailabilityMode, true
}

// HasAvailabilityMode returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) HasAvailabilityMode() bool {
	if o != nil && o.AvailabilityMode != nil {
		return true
	}

	return false
}

// SetAvailabilityMode gets a reference to the given string and assigns it to the AvailabilityMode field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) SetAvailabilityMode(v string) {
	o.AvailabilityMode = &v
}

// GetPoolMemberRef returns the PoolMemberRef field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetPoolMemberRef() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference {
	if o == nil || o.PoolMemberRef == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference
		return ret
	}
	return *o.PoolMemberRef
}

// GetPoolMemberRefOk returns a tuple with the PoolMemberRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetPoolMemberRefOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference, bool) {
	if o == nil || o.PoolMemberRef == nil {
		return nil, false
	}
	return o.PoolMemberRef, true
}

// HasPoolMemberRef returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) HasPoolMemberRef() bool {
	if o != nil && o.PoolMemberRef != nil {
		return true
	}

	return false
}

// SetPoolMemberRef gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference and assigns it to the PoolMemberRef field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) SetPoolMemberRef(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2PoolMemberReference) {
	o.PoolMemberRef = &v
}

// GetReplicas returns the Replicas field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetReplicas() int32 {
	if o == nil || o.Replicas == nil {
		var ret int32
		return ret
	}
	return *o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetReplicasOk() (*int32, bool) {
	if o == nil || o.Replicas == nil {
		return nil, false
	}
	return o.Replicas, true
}

// HasReplicas returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) HasReplicas() bool {
	if o != nil && o.Replicas != nil {
		return true
	}

	return false
}

// SetReplicas gets a reference to the given int32 and assigns it to the Replicas field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) SetReplicas(v int32) {
	o.Replicas = &v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetSelector() V1LabelSelector {
	if o == nil || o.Selector == nil {
		var ret V1LabelSelector
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) GetSelectorOk() (*V1LabelSelector, bool) {
	if o == nil || o.Selector == nil {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) HasSelector() bool {
	if o != nil && o.Selector != nil {
		return true
	}

	return false
}

// SetSelector gets a reference to the given V1LabelSelector and assigns it to the Selector field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) SetSelector(v V1LabelSelector) {
	o.Selector = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AvailabilityMode != nil {
		toSerialize["availabilityMode"] = o.AvailabilityMode
	}
	if o.PoolMemberRef != nil {
		toSerialize["poolMemberRef"] = o.PoolMemberRef
	}
	if o.Replicas != nil {
		toSerialize["replicas"] = o.Replicas
	}
	if o.Selector != nil {
		toSerialize["selector"] = o.Selector
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha2MonitorSetSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


