//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring OfferItemPriceRecurring specifies the recurring components of a price such as `interval` and `interval_count`.
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring struct {
	AggregateUsage *string `json:"aggregateUsage,omitempty"`
	// Specifies billing frequency. Either `day`, `week`, `month` or `year`.
	Interval *string `json:"interval,omitempty"`
	// The number of intervals between subscription billings. For example, `interval=month` and `interval_count=3` bills every 3 months. Maximum of one-year interval is allowed (1 year, 12 months, or 52 weeks).
	IntervalCount *int64 `json:"intervalCount,omitempty"`
	UsageType *string `json:"usageType,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurringWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurringWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring{}
	return &this
}

// GetAggregateUsage returns the AggregateUsage field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetAggregateUsage() string {
	if o == nil || o.AggregateUsage == nil {
		var ret string
		return ret
	}
	return *o.AggregateUsage
}

// GetAggregateUsageOk returns a tuple with the AggregateUsage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetAggregateUsageOk() (*string, bool) {
	if o == nil || o.AggregateUsage == nil {
		return nil, false
	}
	return o.AggregateUsage, true
}

// HasAggregateUsage returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) HasAggregateUsage() bool {
	if o != nil && o.AggregateUsage != nil {
		return true
	}

	return false
}

// SetAggregateUsage gets a reference to the given string and assigns it to the AggregateUsage field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) SetAggregateUsage(v string) {
	o.AggregateUsage = &v
}

// GetInterval returns the Interval field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetInterval() string {
	if o == nil || o.Interval == nil {
		var ret string
		return ret
	}
	return *o.Interval
}

// GetIntervalOk returns a tuple with the Interval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetIntervalOk() (*string, bool) {
	if o == nil || o.Interval == nil {
		return nil, false
	}
	return o.Interval, true
}

// HasInterval returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) HasInterval() bool {
	if o != nil && o.Interval != nil {
		return true
	}

	return false
}

// SetInterval gets a reference to the given string and assigns it to the Interval field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) SetInterval(v string) {
	o.Interval = &v
}

// GetIntervalCount returns the IntervalCount field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetIntervalCount() int64 {
	if o == nil || o.IntervalCount == nil {
		var ret int64
		return ret
	}
	return *o.IntervalCount
}

// GetIntervalCountOk returns a tuple with the IntervalCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetIntervalCountOk() (*int64, bool) {
	if o == nil || o.IntervalCount == nil {
		return nil, false
	}
	return o.IntervalCount, true
}

// HasIntervalCount returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) HasIntervalCount() bool {
	if o != nil && o.IntervalCount != nil {
		return true
	}

	return false
}

// SetIntervalCount gets a reference to the given int64 and assigns it to the IntervalCount field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) SetIntervalCount(v int64) {
	o.IntervalCount = &v
}

// GetUsageType returns the UsageType field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetUsageType() string {
	if o == nil || o.UsageType == nil {
		var ret string
		return ret
	}
	return *o.UsageType
}

// GetUsageTypeOk returns a tuple with the UsageType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) GetUsageTypeOk() (*string, bool) {
	if o == nil || o.UsageType == nil {
		return nil, false
	}
	return o.UsageType, true
}

// HasUsageType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) HasUsageType() bool {
	if o != nil && o.UsageType != nil {
		return true
	}

	return false
}

// SetUsageType gets a reference to the given string and assigns it to the UsageType field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) SetUsageType(v string) {
	o.UsageType = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AggregateUsage != nil {
		toSerialize["aggregateUsage"] = o.AggregateUsage
	}
	if o.Interval != nil {
		toSerialize["interval"] = o.Interval
	}
	if o.IntervalCount != nil {
		toSerialize["intervalCount"] = o.IntervalCount
	}
	if o.UsageType != nil {
		toSerialize["usageType"] = o.UsageType
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferItemPriceRecurring) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


