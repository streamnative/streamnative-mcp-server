//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
	"time"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec SubscriptionSpec defines the desired state of Subscription
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec struct {
	// AnchorDate is a timestamp representing the first billing cycle end date. It is represented by seconds from the epoch on the Stripe side.
	AnchorDate *time.Time `json:"anchorDate,omitempty"`
	// CloudType will validate resources like the consumption unit product are restricted to the correct cloud provider
	CloudType *string `json:"cloudType,omitempty"`
	Description *string `json:"description,omitempty"`
	// EndDate is a timestamp representing the date when the subscription will be ended. It is represented in RFC3339 form and is in UTC.
	EndDate *time.Time `json:"endDate,omitempty"`
	// Ending balance for a subscription, this value is asynchrnously updated by billing-reporter and directly pulled from stripe's invoice object [1].  Negative at this value means that there are outstanding discount credits left for the customer.  Nil implies that billing reporter hasn't run since creation and yet to set the value. [1] https://docs.stripe.com/api/invoices/object#invoice_object-ending_balance
	EndingBalanceCents *int64 `json:"endingBalanceCents,omitempty"`
	// One-time items.
	Once []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem `json:"once,omitempty"`
	ParentSubscription *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference `json:"parentSubscription,omitempty"`
	// Recurring items.
	Recurring []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem `json:"recurring,omitempty"`
	// StartDate is a timestamp representing the start date of the subscription. It is represented in RFC3339 form and is in UTC.
	StartDate *time.Time `json:"startDate,omitempty"`
	Stripe *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec `json:"stripe,omitempty"`
	Suger *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec `json:"suger,omitempty"`
	// The type of the subscription. Validate values: stripe, suger Default to stripe.
	Type *string `json:"type,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec{}
	return &this
}

// GetAnchorDate returns the AnchorDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetAnchorDate() time.Time {
	if o == nil || o.AnchorDate == nil {
		var ret time.Time
		return ret
	}
	return *o.AnchorDate
}

// GetAnchorDateOk returns a tuple with the AnchorDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetAnchorDateOk() (*time.Time, bool) {
	if o == nil || o.AnchorDate == nil {
		return nil, false
	}
	return o.AnchorDate, true
}

// HasAnchorDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasAnchorDate() bool {
	if o != nil && o.AnchorDate != nil {
		return true
	}

	return false
}

// SetAnchorDate gets a reference to the given time.Time and assigns it to the AnchorDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetAnchorDate(v time.Time) {
	o.AnchorDate = &v
}

// GetCloudType returns the CloudType field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetCloudType() string {
	if o == nil || o.CloudType == nil {
		var ret string
		return ret
	}
	return *o.CloudType
}

// GetCloudTypeOk returns a tuple with the CloudType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetCloudTypeOk() (*string, bool) {
	if o == nil || o.CloudType == nil {
		return nil, false
	}
	return o.CloudType, true
}

// HasCloudType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasCloudType() bool {
	if o != nil && o.CloudType != nil {
		return true
	}

	return false
}

// SetCloudType gets a reference to the given string and assigns it to the CloudType field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetCloudType(v string) {
	o.CloudType = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetDescription(v string) {
	o.Description = &v
}

// GetEndDate returns the EndDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetEndDate() time.Time {
	if o == nil || o.EndDate == nil {
		var ret time.Time
		return ret
	}
	return *o.EndDate
}

// GetEndDateOk returns a tuple with the EndDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetEndDateOk() (*time.Time, bool) {
	if o == nil || o.EndDate == nil {
		return nil, false
	}
	return o.EndDate, true
}

// HasEndDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasEndDate() bool {
	if o != nil && o.EndDate != nil {
		return true
	}

	return false
}

// SetEndDate gets a reference to the given time.Time and assigns it to the EndDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetEndDate(v time.Time) {
	o.EndDate = &v
}

// GetEndingBalanceCents returns the EndingBalanceCents field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetEndingBalanceCents() int64 {
	if o == nil || o.EndingBalanceCents == nil {
		var ret int64
		return ret
	}
	return *o.EndingBalanceCents
}

// GetEndingBalanceCentsOk returns a tuple with the EndingBalanceCents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetEndingBalanceCentsOk() (*int64, bool) {
	if o == nil || o.EndingBalanceCents == nil {
		return nil, false
	}
	return o.EndingBalanceCents, true
}

// HasEndingBalanceCents returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasEndingBalanceCents() bool {
	if o != nil && o.EndingBalanceCents != nil {
		return true
	}

	return false
}

// SetEndingBalanceCents gets a reference to the given int64 and assigns it to the EndingBalanceCents field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetEndingBalanceCents(v int64) {
	o.EndingBalanceCents = &v
}

// GetOnce returns the Once field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetOnce() []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	if o == nil || o.Once == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem
		return ret
	}
	return o.Once
}

// GetOnceOk returns a tuple with the Once field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetOnceOk() ([]ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem, bool) {
	if o == nil || o.Once == nil {
		return nil, false
	}
	return o.Once, true
}

// HasOnce returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasOnce() bool {
	if o != nil && o.Once != nil {
		return true
	}

	return false
}

// SetOnce gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem and assigns it to the Once field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetOnce(v []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) {
	o.Once = v
}

// GetParentSubscription returns the ParentSubscription field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetParentSubscription() ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference {
	if o == nil || o.ParentSubscription == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference
		return ret
	}
	return *o.ParentSubscription
}

// GetParentSubscriptionOk returns a tuple with the ParentSubscription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetParentSubscriptionOk() (*ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference, bool) {
	if o == nil || o.ParentSubscription == nil {
		return nil, false
	}
	return o.ParentSubscription, true
}

// HasParentSubscription returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasParentSubscription() bool {
	if o != nil && o.ParentSubscription != nil {
		return true
	}

	return false
}

// SetParentSubscription gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference and assigns it to the ParentSubscription field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetParentSubscription(v ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionReference) {
	o.ParentSubscription = &v
}

// GetRecurring returns the Recurring field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetRecurring() []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	if o == nil || o.Recurring == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem
		return ret
	}
	return o.Recurring
}

// GetRecurringOk returns a tuple with the Recurring field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetRecurringOk() ([]ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem, bool) {
	if o == nil || o.Recurring == nil {
		return nil, false
	}
	return o.Recurring, true
}

// HasRecurring returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasRecurring() bool {
	if o != nil && o.Recurring != nil {
		return true
	}

	return false
}

// SetRecurring gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem and assigns it to the Recurring field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetRecurring(v []ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) {
	o.Recurring = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetStartDate() time.Time {
	if o == nil || o.StartDate == nil {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetStartDateOk() (*time.Time, bool) {
	if o == nil || o.StartDate == nil {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasStartDate() bool {
	if o != nil && o.StartDate != nil {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetStripe returns the Stripe field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetStripe() ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec {
	if o == nil || o.Stripe == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec
		return ret
	}
	return *o.Stripe
}

// GetStripeOk returns a tuple with the Stripe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetStripeOk() (*ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec, bool) {
	if o == nil || o.Stripe == nil {
		return nil, false
	}
	return o.Stripe, true
}

// HasStripe returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasStripe() bool {
	if o != nil && o.Stripe != nil {
		return true
	}

	return false
}

// SetStripe gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec and assigns it to the Stripe field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetStripe(v ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1StripeSubscriptionSpec) {
	o.Stripe = &v
}

// GetSuger returns the Suger field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetSuger() ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec {
	if o == nil || o.Suger == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec
		return ret
	}
	return *o.Suger
}

// GetSugerOk returns a tuple with the Suger field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetSugerOk() (*ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec, bool) {
	if o == nil || o.Suger == nil {
		return nil, false
	}
	return o.Suger, true
}

// HasSuger returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasSuger() bool {
	if o != nil && o.Suger != nil {
		return true
	}

	return false
}

// SetSuger gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec and assigns it to the Suger field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetSuger(v ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SugerSubscriptionSpec) {
	o.Suger = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetType() string {
	if o == nil || o.Type == nil {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) GetTypeOk() (*string, bool) {
	if o == nil || o.Type == nil {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) HasType() bool {
	if o != nil && o.Type != nil {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) SetType(v string) {
	o.Type = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AnchorDate != nil {
		toSerialize["anchorDate"] = o.AnchorDate
	}
	if o.CloudType != nil {
		toSerialize["cloudType"] = o.CloudType
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	if o.EndDate != nil {
		toSerialize["endDate"] = o.EndDate
	}
	if o.EndingBalanceCents != nil {
		toSerialize["endingBalanceCents"] = o.EndingBalanceCents
	}
	if o.Once != nil {
		toSerialize["once"] = o.Once
	}
	if o.ParentSubscription != nil {
		toSerialize["parentSubscription"] = o.ParentSubscription
	}
	if o.Recurring != nil {
		toSerialize["recurring"] = o.Recurring
	}
	if o.StartDate != nil {
		toSerialize["startDate"] = o.StartDate
	}
	if o.Stripe != nil {
		toSerialize["stripe"] = o.Stripe
	}
	if o.Suger != nil {
		toSerialize["suger"] = o.Suger
	}
	if o.Type != nil {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


