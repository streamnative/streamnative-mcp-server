// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth struct {
	// ClientCertificate is base64-encoded public certificate used by clients to authenticate to the cluster endpoint.
	ClientCertificate *string `json:"clientCertificate,omitempty"`
	// ClientKey is base64-encoded private key used by clients to authenticate to the cluster endpoint.
	ClientKey *string `json:"clientKey,omitempty"`
	// ClusterCaCertificate is base64-encoded public certificate that is the root of trust for the cluster.
	ClusterCaCertificate *string `json:"clusterCaCertificate,omitempty"`
	Exec *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig `json:"exec,omitempty"`
	// Password is the password to use for HTTP basic authentication to the master endpoint.
	Password *string `json:"password,omitempty"`
	// Username is the username to use for HTTP basic authentication to the master endpoint.
	Username *string `json:"username,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuthWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuthWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth{}
	return &this
}

// GetClientCertificate returns the ClientCertificate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClientCertificate() string {
	if o == nil || o.ClientCertificate == nil {
		var ret string
		return ret
	}
	return *o.ClientCertificate
}

// GetClientCertificateOk returns a tuple with the ClientCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClientCertificateOk() (*string, bool) {
	if o == nil || o.ClientCertificate == nil {
		return nil, false
	}
	return o.ClientCertificate, true
}

// HasClientCertificate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasClientCertificate() bool {
	if o != nil && o.ClientCertificate != nil {
		return true
	}

	return false
}

// SetClientCertificate gets a reference to the given string and assigns it to the ClientCertificate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetClientCertificate(v string) {
	o.ClientCertificate = &v
}

// GetClientKey returns the ClientKey field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClientKey() string {
	if o == nil || o.ClientKey == nil {
		var ret string
		return ret
	}
	return *o.ClientKey
}

// GetClientKeyOk returns a tuple with the ClientKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClientKeyOk() (*string, bool) {
	if o == nil || o.ClientKey == nil {
		return nil, false
	}
	return o.ClientKey, true
}

// HasClientKey returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasClientKey() bool {
	if o != nil && o.ClientKey != nil {
		return true
	}

	return false
}

// SetClientKey gets a reference to the given string and assigns it to the ClientKey field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetClientKey(v string) {
	o.ClientKey = &v
}

// GetClusterCaCertificate returns the ClusterCaCertificate field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClusterCaCertificate() string {
	if o == nil || o.ClusterCaCertificate == nil {
		var ret string
		return ret
	}
	return *o.ClusterCaCertificate
}

// GetClusterCaCertificateOk returns a tuple with the ClusterCaCertificate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetClusterCaCertificateOk() (*string, bool) {
	if o == nil || o.ClusterCaCertificate == nil {
		return nil, false
	}
	return o.ClusterCaCertificate, true
}

// HasClusterCaCertificate returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasClusterCaCertificate() bool {
	if o != nil && o.ClusterCaCertificate != nil {
		return true
	}

	return false
}

// SetClusterCaCertificate gets a reference to the given string and assigns it to the ClusterCaCertificate field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetClusterCaCertificate(v string) {
	o.ClusterCaCertificate = &v
}

// GetExec returns the Exec field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetExec() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig {
	if o == nil || o.Exec == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig
		return ret
	}
	return *o.Exec
}

// GetExecOk returns a tuple with the Exec field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetExecOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig, bool) {
	if o == nil || o.Exec == nil {
		return nil, false
	}
	return o.Exec, true
}

// HasExec returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasExec() bool {
	if o != nil && o.Exec != nil {
		return true
	}

	return false
}

// SetExec gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig and assigns it to the Exec field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetExec(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ExecConfig) {
	o.Exec = &v
}

// GetPassword returns the Password field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetPassword() string {
	if o == nil || o.Password == nil {
		var ret string
		return ret
	}
	return *o.Password
}

// GetPasswordOk returns a tuple with the Password field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetPasswordOk() (*string, bool) {
	if o == nil || o.Password == nil {
		return nil, false
	}
	return o.Password, true
}

// HasPassword returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasPassword() bool {
	if o != nil && o.Password != nil {
		return true
	}

	return false
}

// SetPassword gets a reference to the given string and assigns it to the Password field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetPassword(v string) {
	o.Password = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetUsername() string {
	if o == nil || o.Username == nil {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) GetUsernameOk() (*string, bool) {
	if o == nil || o.Username == nil {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) HasUsername() bool {
	if o != nil && o.Username != nil {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) SetUsername(v string) {
	o.Username = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ClientCertificate != nil {
		toSerialize["clientCertificate"] = o.ClientCertificate
	}
	if o.ClientKey != nil {
		toSerialize["clientKey"] = o.ClientKey
	}
	if o.ClusterCaCertificate != nil {
		toSerialize["clusterCaCertificate"] = o.ClusterCaCertificate
	}
	if o.Exec != nil {
		toSerialize["exec"] = o.Exec
	}
	if o.Password != nil {
		toSerialize["password"] = o.Password
	}
	if o.Username != nil {
		toSerialize["username"] = o.Username
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1MasterAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


