//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth PulsarInstanceAuth defines auth section of PulsarInstance
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth struct {
	// ApiKey configuration
	Apikey map[string]interface{} `json:"apikey,omitempty"`
	Oauth2 *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config `json:"oauth2,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuthWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuthWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth{}
	return &this
}

// GetApikey returns the Apikey field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) GetApikey() map[string]interface{} {
	if o == nil || o.Apikey == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Apikey
}

// GetApikeyOk returns a tuple with the Apikey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) GetApikeyOk() (map[string]interface{}, bool) {
	if o == nil || o.Apikey == nil {
		return nil, false
	}
	return o.Apikey, true
}

// HasApikey returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) HasApikey() bool {
	if o != nil && o.Apikey != nil {
		return true
	}

	return false
}

// SetApikey gets a reference to the given map[string]interface{} and assigns it to the Apikey field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) SetApikey(v map[string]interface{}) {
	o.Apikey = v
}

// GetOauth2 returns the Oauth2 field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) GetOauth2() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config {
	if o == nil || o.Oauth2 == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config
		return ret
	}
	return *o.Oauth2
}

// GetOauth2Ok returns a tuple with the Oauth2 field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) GetOauth2Ok() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config, bool) {
	if o == nil || o.Oauth2 == nil {
		return nil, false
	}
	return o.Oauth2, true
}

// HasOauth2 returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) HasOauth2() bool {
	if o != nil && o.Oauth2 != nil {
		return true
	}

	return false
}

// SetOauth2 gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config and assigns it to the Oauth2 field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) SetOauth2(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1OAuth2Config) {
	o.Oauth2 = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Apikey != nil {
		toSerialize["apikey"] = o.Apikey
	}
	if o.Oauth2 != nil {
		toSerialize["oauth2"] = o.Oauth2
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PulsarInstanceAuth) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


