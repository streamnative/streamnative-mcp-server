//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec PoolSpec defines the desired state of Pool
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec struct {
	// CloudFeature indicates features this pool wants to enable/disable by default for all Pulsar clusters created on it
	CloudFeature *map[string]bool `json:"cloudFeature,omitempty"`
	// This feild is used by `cloud-manager` and `cloud-billing-reporter` to potentially charge different rates for our customers. It is imperative that we correctly set this field if a pool is a \"Pro\" tier or no tier.
	DeploymentType *string `json:"deploymentType,omitempty"`
	Gcloud map[string]interface{} `json:"gcloud,omitempty"`
	Sharing *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig `json:"sharing,omitempty"`
	Type string `json:"type"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec(type_ string) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec{}
	this.Type = type_
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpecWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpecWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec{}
	return &this
}

// GetCloudFeature returns the CloudFeature field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetCloudFeature() map[string]bool {
	if o == nil || o.CloudFeature == nil {
		var ret map[string]bool
		return ret
	}
	return *o.CloudFeature
}

// GetCloudFeatureOk returns a tuple with the CloudFeature field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetCloudFeatureOk() (*map[string]bool, bool) {
	if o == nil || o.CloudFeature == nil {
		return nil, false
	}
	return o.CloudFeature, true
}

// HasCloudFeature returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) HasCloudFeature() bool {
	if o != nil && o.CloudFeature != nil {
		return true
	}

	return false
}

// SetCloudFeature gets a reference to the given map[string]bool and assigns it to the CloudFeature field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) SetCloudFeature(v map[string]bool) {
	o.CloudFeature = &v
}

// GetDeploymentType returns the DeploymentType field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetDeploymentType() string {
	if o == nil || o.DeploymentType == nil {
		var ret string
		return ret
	}
	return *o.DeploymentType
}

// GetDeploymentTypeOk returns a tuple with the DeploymentType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetDeploymentTypeOk() (*string, bool) {
	if o == nil || o.DeploymentType == nil {
		return nil, false
	}
	return o.DeploymentType, true
}

// HasDeploymentType returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) HasDeploymentType() bool {
	if o != nil && o.DeploymentType != nil {
		return true
	}

	return false
}

// SetDeploymentType gets a reference to the given string and assigns it to the DeploymentType field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) SetDeploymentType(v string) {
	o.DeploymentType = &v
}

// GetGcloud returns the Gcloud field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetGcloud() map[string]interface{} {
	if o == nil || o.Gcloud == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Gcloud
}

// GetGcloudOk returns a tuple with the Gcloud field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetGcloudOk() (map[string]interface{}, bool) {
	if o == nil || o.Gcloud == nil {
		return nil, false
	}
	return o.Gcloud, true
}

// HasGcloud returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) HasGcloud() bool {
	if o != nil && o.Gcloud != nil {
		return true
	}

	return false
}

// SetGcloud gets a reference to the given map[string]interface{} and assigns it to the Gcloud field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) SetGcloud(v map[string]interface{}) {
	o.Gcloud = v
}

// GetSharing returns the Sharing field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetSharing() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig {
	if o == nil || o.Sharing == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig
		return ret
	}
	return *o.Sharing
}

// GetSharingOk returns a tuple with the Sharing field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetSharingOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig, bool) {
	if o == nil || o.Sharing == nil {
		return nil, false
	}
	return o.Sharing, true
}

// HasSharing returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) HasSharing() bool {
	if o != nil && o.Sharing != nil {
		return true
	}

	return false
}

// SetSharing gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig and assigns it to the Sharing field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) SetSharing(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1SharingConfig) {
	o.Sharing = &v
}

// GetType returns the Type field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) SetType(v string) {
	o.Type = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudFeature != nil {
		toSerialize["cloudFeature"] = o.CloudFeature
	}
	if o.DeploymentType != nil {
		toSerialize["deploymentType"] = o.DeploymentType
	}
	if o.Gcloud != nil {
		toSerialize["gcloud"] = o.Gcloud
	}
	if o.Sharing != nil {
		toSerialize["sharing"] = o.Sharing
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1PoolSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


