//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig struct {
	// Amqp controls whether to enable Amqp protocol in brokers
	Amqp map[string]interface{} `json:"amqp,omitempty"`
	// Kafka controls whether to enable Kafka protocol in brokers
	Kafka map[string]interface{} `json:"kafka,omitempty"`
	// Mqtt controls whether to enable mqtt protocol in brokers
	Mqtt map[string]interface{} `json:"mqtt,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfigWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfigWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig{}
	return &this
}

// GetAmqp returns the Amqp field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetAmqp() map[string]interface{} {
	if o == nil || o.Amqp == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Amqp
}

// GetAmqpOk returns a tuple with the Amqp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetAmqpOk() (map[string]interface{}, bool) {
	if o == nil || o.Amqp == nil {
		return nil, false
	}
	return o.Amqp, true
}

// HasAmqp returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) HasAmqp() bool {
	if o != nil && o.Amqp != nil {
		return true
	}

	return false
}

// SetAmqp gets a reference to the given map[string]interface{} and assigns it to the Amqp field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) SetAmqp(v map[string]interface{}) {
	o.Amqp = v
}

// GetKafka returns the Kafka field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetKafka() map[string]interface{} {
	if o == nil || o.Kafka == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Kafka
}

// GetKafkaOk returns a tuple with the Kafka field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetKafkaOk() (map[string]interface{}, bool) {
	if o == nil || o.Kafka == nil {
		return nil, false
	}
	return o.Kafka, true
}

// HasKafka returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) HasKafka() bool {
	if o != nil && o.Kafka != nil {
		return true
	}

	return false
}

// SetKafka gets a reference to the given map[string]interface{} and assigns it to the Kafka field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) SetKafka(v map[string]interface{}) {
	o.Kafka = v
}

// GetMqtt returns the Mqtt field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetMqtt() map[string]interface{} {
	if o == nil || o.Mqtt == nil {
		var ret map[string]interface{}
		return ret
	}
	return o.Mqtt
}

// GetMqttOk returns a tuple with the Mqtt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) GetMqttOk() (map[string]interface{}, bool) {
	if o == nil || o.Mqtt == nil {
		return nil, false
	}
	return o.Mqtt, true
}

// HasMqtt returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) HasMqtt() bool {
	if o != nil && o.Mqtt != nil {
		return true
	}

	return false
}

// SetMqtt gets a reference to the given map[string]interface{} and assigns it to the Mqtt field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) SetMqtt(v map[string]interface{}) {
	o.Mqtt = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Amqp != nil {
		toSerialize["amqp"] = o.Amqp
	}
	if o.Kafka != nil {
		toSerialize["kafka"] = o.Kafka
	}
	if o.Mqtt != nil {
		toSerialize["mqtt"] = o.Mqtt
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


