// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
	"time"
)

// ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition struct for ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition
type ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition struct {
	// Time is a wrapper around time.Time which supports correct marshaling to YAML and JSON.  Wrappers are provided for many of the factory methods that the time package offers.
	LastTransitionTime *time.Time `json:"lastTransitionTime,omitempty"`
	Message *string `json:"message,omitempty"`
	// observedGeneration represents the .metadata.generation that the condition was set based upon. For instance, if .metadata.generation is currently 12, but the .status.conditions[x].observedGeneration is 9, the condition is out of date with respect to the current state of the instance.
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`
	Reason *string `json:"reason,omitempty"`
	Status string `json:"status"`
	Type string `json:"type"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition(status string, type_ string) *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition{}
	this.Status = status
	this.Type = type_
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusConditionWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusConditionWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition{}
	return &this
}

// GetLastTransitionTime returns the LastTransitionTime field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetLastTransitionTime() time.Time {
	if o == nil || o.LastTransitionTime == nil {
		var ret time.Time
		return ret
	}
	return *o.LastTransitionTime
}

// GetLastTransitionTimeOk returns a tuple with the LastTransitionTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetLastTransitionTimeOk() (*time.Time, bool) {
	if o == nil || o.LastTransitionTime == nil {
		return nil, false
	}
	return o.LastTransitionTime, true
}

// HasLastTransitionTime returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) HasLastTransitionTime() bool {
	if o != nil && o.LastTransitionTime != nil {
		return true
	}

	return false
}

// SetLastTransitionTime gets a reference to the given time.Time and assigns it to the LastTransitionTime field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetLastTransitionTime(v time.Time) {
	o.LastTransitionTime = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetMessage() string {
	if o == nil || o.Message == nil {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetMessageOk() (*string, bool) {
	if o == nil || o.Message == nil {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) HasMessage() bool {
	if o != nil && o.Message != nil {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetMessage(v string) {
	o.Message = &v
}

// GetObservedGeneration returns the ObservedGeneration field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetObservedGeneration() int64 {
	if o == nil || o.ObservedGeneration == nil {
		var ret int64
		return ret
	}
	return *o.ObservedGeneration
}

// GetObservedGenerationOk returns a tuple with the ObservedGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetObservedGenerationOk() (*int64, bool) {
	if o == nil || o.ObservedGeneration == nil {
		return nil, false
	}
	return o.ObservedGeneration, true
}

// HasObservedGeneration returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) HasObservedGeneration() bool {
	if o != nil && o.ObservedGeneration != nil {
		return true
	}

	return false
}

// SetObservedGeneration gets a reference to the given int64 and assigns it to the ObservedGeneration field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetObservedGeneration(v int64) {
	o.ObservedGeneration = &v
}

// GetReason returns the Reason field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetReason() string {
	if o == nil || o.Reason == nil {
		var ret string
		return ret
	}
	return *o.Reason
}

// GetReasonOk returns a tuple with the Reason field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetReasonOk() (*string, bool) {
	if o == nil || o.Reason == nil {
		return nil, false
	}
	return o.Reason, true
}

// HasReason returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) HasReason() bool {
	if o != nil && o.Reason != nil {
		return true
	}

	return false
}

// SetReason gets a reference to the given string and assigns it to the Reason field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetReason(v string) {
	o.Reason = &v
}

// GetStatus returns the Status field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) SetType(v string) {
	o.Type = v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.LastTransitionTime != nil {
		toSerialize["lastTransitionTime"] = o.LastTransitionTime
	}
	if o.Message != nil {
		toSerialize["message"] = o.Message
	}
	if o.ObservedGeneration != nil {
		toSerialize["observedGeneration"] = o.ObservedGeneration
	}
	if o.Reason != nil {
		toSerialize["reason"] = o.Reason
	}
	if true {
		toSerialize["status"] = o.Status
	}
	if true {
		toSerialize["type"] = o.Type
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) Get() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) Set(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1VvpDeploymentStatusCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


