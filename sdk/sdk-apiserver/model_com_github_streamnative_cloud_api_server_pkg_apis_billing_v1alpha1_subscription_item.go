// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem SubscriptionItem defines a product within a subscription.
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem struct {
	// Key is the item key within the subscription.
	Key *string `json:"key,omitempty"`
	// Metadata is an unstructured key value map stored with an item.
	Metadata *map[string]string `json:"metadata,omitempty"`
	Product *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference `json:"product,omitempty"`
	// Quantity for this item.
	Quantity *string `json:"quantity,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItemWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItemWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetKey() string {
	if o == nil || o.Key == nil {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetKeyOk() (*string, bool) {
	if o == nil || o.Key == nil {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) HasKey() bool {
	if o != nil && o.Key != nil {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) SetKey(v string) {
	o.Key = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetMetadata() map[string]string {
	if o == nil || o.Metadata == nil {
		var ret map[string]string
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetMetadataOk() (*map[string]string, bool) {
	if o == nil || o.Metadata == nil {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) HasMetadata() bool {
	if o != nil && o.Metadata != nil {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given map[string]string and assigns it to the Metadata field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) SetMetadata(v map[string]string) {
	o.Metadata = &v
}

// GetProduct returns the Product field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetProduct() ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference {
	if o == nil || o.Product == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference
		return ret
	}
	return *o.Product
}

// GetProductOk returns a tuple with the Product field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetProductOk() (*ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference, bool) {
	if o == nil || o.Product == nil {
		return nil, false
	}
	return o.Product, true
}

// HasProduct returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) HasProduct() bool {
	if o != nil && o.Product != nil {
		return true
	}

	return false
}

// SetProduct gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference and assigns it to the Product field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) SetProduct(v ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1ProductReference) {
	o.Product = &v
}

// GetQuantity returns the Quantity field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetQuantity() string {
	if o == nil || o.Quantity == nil {
		var ret string
		return ret
	}
	return *o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) GetQuantityOk() (*string, bool) {
	if o == nil || o.Quantity == nil {
		return nil, false
	}
	return o.Quantity, true
}

// HasQuantity returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) HasQuantity() bool {
	if o != nil && o.Quantity != nil {
		return true
	}

	return false
}

// SetQuantity gets a reference to the given string and assigns it to the Quantity field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) SetQuantity(v string) {
	o.Quantity = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Key != nil {
		toSerialize["key"] = o.Key
	}
	if o.Metadata != nil {
		toSerialize["metadata"] = o.Metadata
	}
	if o.Product != nil {
		toSerialize["product"] = o.Product
	}
	if o.Quantity != nil {
		toSerialize["quantity"] = o.Quantity
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1SubscriptionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


