//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container A single application container that you want to run within a pod. The Container API from the core group is not used directly to avoid unneeded fields and reduce the size of the CRD. New fields could be added as needed.
type ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container struct {
	// Arguments to the entrypoint.
	Args []string `json:"args,omitempty"`
	// Entrypoint array. Not executed within a shell.
	Command []string `json:"command,omitempty"`
	// List of environment variables to set in the container.
	Env []V1EnvVar `json:"env,omitempty"`
	// List of sources to populate environment variables in the container.
	EnvFrom []V1EnvFromSource `json:"envFrom,omitempty"`
	// Docker image name.
	Image *string `json:"image,omitempty"`
	// Image pull policy.  Possible enum values:  - `\"Always\"` means that kubelet always attempts to pull the latest image. Container will fail If the pull fails.  - `\"IfNotPresent\"` means that kubelet pulls if the image isn't present on disk. Container will fail if the image isn't present and the pull fails.  - `\"Never\"` means that kubelet never pulls an image, but only uses a local image. Container will fail if the image isn't present
	ImagePullPolicy *string `json:"imagePullPolicy,omitempty"`
	LivenessProbe *V1Probe `json:"livenessProbe,omitempty"`
	// Name of the container specified as a DNS_LABEL. Each container in a pod must have a unique name (DNS_LABEL).
	Name string `json:"name"`
	ReadinessProbe *V1Probe `json:"readinessProbe,omitempty"`
	Resources *V1ResourceRequirements `json:"resources,omitempty"`
	SecurityContext *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext `json:"securityContext,omitempty"`
	StartupProbe *V1Probe `json:"startupProbe,omitempty"`
	// Pod volumes to mount into the container's filesystem.
	VolumeMounts []V1VolumeMount `json:"volumeMounts,omitempty"`
	// Container's working directory.
	WorkingDir *string `json:"workingDir,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container(name string) *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container{}
	this.Name = name
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1ContainerWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1ContainerWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container {
	this := ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container{}
	return &this
}

// GetArgs returns the Args field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetArgs() []string {
	if o == nil || o.Args == nil {
		var ret []string
		return ret
	}
	return o.Args
}

// GetArgsOk returns a tuple with the Args field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetArgsOk() ([]string, bool) {
	if o == nil || o.Args == nil {
		return nil, false
	}
	return o.Args, true
}

// HasArgs returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasArgs() bool {
	if o != nil && o.Args != nil {
		return true
	}

	return false
}

// SetArgs gets a reference to the given []string and assigns it to the Args field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetArgs(v []string) {
	o.Args = v
}

// GetCommand returns the Command field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetCommand() []string {
	if o == nil || o.Command == nil {
		var ret []string
		return ret
	}
	return o.Command
}

// GetCommandOk returns a tuple with the Command field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetCommandOk() ([]string, bool) {
	if o == nil || o.Command == nil {
		return nil, false
	}
	return o.Command, true
}

// HasCommand returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasCommand() bool {
	if o != nil && o.Command != nil {
		return true
	}

	return false
}

// SetCommand gets a reference to the given []string and assigns it to the Command field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetCommand(v []string) {
	o.Command = v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetEnv() []V1EnvVar {
	if o == nil || o.Env == nil {
		var ret []V1EnvVar
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetEnvOk() ([]V1EnvVar, bool) {
	if o == nil || o.Env == nil {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasEnv() bool {
	if o != nil && o.Env != nil {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []V1EnvVar and assigns it to the Env field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetEnv(v []V1EnvVar) {
	o.Env = v
}

// GetEnvFrom returns the EnvFrom field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetEnvFrom() []V1EnvFromSource {
	if o == nil || o.EnvFrom == nil {
		var ret []V1EnvFromSource
		return ret
	}
	return o.EnvFrom
}

// GetEnvFromOk returns a tuple with the EnvFrom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetEnvFromOk() ([]V1EnvFromSource, bool) {
	if o == nil || o.EnvFrom == nil {
		return nil, false
	}
	return o.EnvFrom, true
}

// HasEnvFrom returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasEnvFrom() bool {
	if o != nil && o.EnvFrom != nil {
		return true
	}

	return false
}

// SetEnvFrom gets a reference to the given []V1EnvFromSource and assigns it to the EnvFrom field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetEnvFrom(v []V1EnvFromSource) {
	o.EnvFrom = v
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetImage() string {
	if o == nil || o.Image == nil {
		var ret string
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetImageOk() (*string, bool) {
	if o == nil || o.Image == nil {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasImage() bool {
	if o != nil && o.Image != nil {
		return true
	}

	return false
}

// SetImage gets a reference to the given string and assigns it to the Image field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetImage(v string) {
	o.Image = &v
}

// GetImagePullPolicy returns the ImagePullPolicy field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetImagePullPolicy() string {
	if o == nil || o.ImagePullPolicy == nil {
		var ret string
		return ret
	}
	return *o.ImagePullPolicy
}

// GetImagePullPolicyOk returns a tuple with the ImagePullPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetImagePullPolicyOk() (*string, bool) {
	if o == nil || o.ImagePullPolicy == nil {
		return nil, false
	}
	return o.ImagePullPolicy, true
}

// HasImagePullPolicy returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasImagePullPolicy() bool {
	if o != nil && o.ImagePullPolicy != nil {
		return true
	}

	return false
}

// SetImagePullPolicy gets a reference to the given string and assigns it to the ImagePullPolicy field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetImagePullPolicy(v string) {
	o.ImagePullPolicy = &v
}

// GetLivenessProbe returns the LivenessProbe field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetLivenessProbe() V1Probe {
	if o == nil || o.LivenessProbe == nil {
		var ret V1Probe
		return ret
	}
	return *o.LivenessProbe
}

// GetLivenessProbeOk returns a tuple with the LivenessProbe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetLivenessProbeOk() (*V1Probe, bool) {
	if o == nil || o.LivenessProbe == nil {
		return nil, false
	}
	return o.LivenessProbe, true
}

// HasLivenessProbe returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasLivenessProbe() bool {
	if o != nil && o.LivenessProbe != nil {
		return true
	}

	return false
}

// SetLivenessProbe gets a reference to the given V1Probe and assigns it to the LivenessProbe field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetLivenessProbe(v V1Probe) {
	o.LivenessProbe = &v
}

// GetName returns the Name field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetName(v string) {
	o.Name = v
}

// GetReadinessProbe returns the ReadinessProbe field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetReadinessProbe() V1Probe {
	if o == nil || o.ReadinessProbe == nil {
		var ret V1Probe
		return ret
	}
	return *o.ReadinessProbe
}

// GetReadinessProbeOk returns a tuple with the ReadinessProbe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetReadinessProbeOk() (*V1Probe, bool) {
	if o == nil || o.ReadinessProbe == nil {
		return nil, false
	}
	return o.ReadinessProbe, true
}

// HasReadinessProbe returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasReadinessProbe() bool {
	if o != nil && o.ReadinessProbe != nil {
		return true
	}

	return false
}

// SetReadinessProbe gets a reference to the given V1Probe and assigns it to the ReadinessProbe field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetReadinessProbe(v V1Probe) {
	o.ReadinessProbe = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetResources() V1ResourceRequirements {
	if o == nil || o.Resources == nil {
		var ret V1ResourceRequirements
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetResourcesOk() (*V1ResourceRequirements, bool) {
	if o == nil || o.Resources == nil {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasResources() bool {
	if o != nil && o.Resources != nil {
		return true
	}

	return false
}

// SetResources gets a reference to the given V1ResourceRequirements and assigns it to the Resources field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetResources(v V1ResourceRequirements) {
	o.Resources = &v
}

// GetSecurityContext returns the SecurityContext field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetSecurityContext() ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext {
	if o == nil || o.SecurityContext == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext
		return ret
	}
	return *o.SecurityContext
}

// GetSecurityContextOk returns a tuple with the SecurityContext field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetSecurityContextOk() (*ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext, bool) {
	if o == nil || o.SecurityContext == nil {
		return nil, false
	}
	return o.SecurityContext, true
}

// HasSecurityContext returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasSecurityContext() bool {
	if o != nil && o.SecurityContext != nil {
		return true
	}

	return false
}

// SetSecurityContext gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext and assigns it to the SecurityContext field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetSecurityContext(v ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1SecurityContext) {
	o.SecurityContext = &v
}

// GetStartupProbe returns the StartupProbe field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetStartupProbe() V1Probe {
	if o == nil || o.StartupProbe == nil {
		var ret V1Probe
		return ret
	}
	return *o.StartupProbe
}

// GetStartupProbeOk returns a tuple with the StartupProbe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetStartupProbeOk() (*V1Probe, bool) {
	if o == nil || o.StartupProbe == nil {
		return nil, false
	}
	return o.StartupProbe, true
}

// HasStartupProbe returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasStartupProbe() bool {
	if o != nil && o.StartupProbe != nil {
		return true
	}

	return false
}

// SetStartupProbe gets a reference to the given V1Probe and assigns it to the StartupProbe field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetStartupProbe(v V1Probe) {
	o.StartupProbe = &v
}

// GetVolumeMounts returns the VolumeMounts field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetVolumeMounts() []V1VolumeMount {
	if o == nil || o.VolumeMounts == nil {
		var ret []V1VolumeMount
		return ret
	}
	return o.VolumeMounts
}

// GetVolumeMountsOk returns a tuple with the VolumeMounts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetVolumeMountsOk() ([]V1VolumeMount, bool) {
	if o == nil || o.VolumeMounts == nil {
		return nil, false
	}
	return o.VolumeMounts, true
}

// HasVolumeMounts returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasVolumeMounts() bool {
	if o != nil && o.VolumeMounts != nil {
		return true
	}

	return false
}

// SetVolumeMounts gets a reference to the given []V1VolumeMount and assigns it to the VolumeMounts field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetVolumeMounts(v []V1VolumeMount) {
	o.VolumeMounts = v
}

// GetWorkingDir returns the WorkingDir field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetWorkingDir() string {
	if o == nil || o.WorkingDir == nil {
		var ret string
		return ret
	}
	return *o.WorkingDir
}

// GetWorkingDirOk returns a tuple with the WorkingDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) GetWorkingDirOk() (*string, bool) {
	if o == nil || o.WorkingDir == nil {
		return nil, false
	}
	return o.WorkingDir, true
}

// HasWorkingDir returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) HasWorkingDir() bool {
	if o != nil && o.WorkingDir != nil {
		return true
	}

	return false
}

// SetWorkingDir gets a reference to the given string and assigns it to the WorkingDir field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) SetWorkingDir(v string) {
	o.WorkingDir = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.Args != nil {
		toSerialize["args"] = o.Args
	}
	if o.Command != nil {
		toSerialize["command"] = o.Command
	}
	if o.Env != nil {
		toSerialize["env"] = o.Env
	}
	if o.EnvFrom != nil {
		toSerialize["envFrom"] = o.EnvFrom
	}
	if o.Image != nil {
		toSerialize["image"] = o.Image
	}
	if o.ImagePullPolicy != nil {
		toSerialize["imagePullPolicy"] = o.ImagePullPolicy
	}
	if o.LivenessProbe != nil {
		toSerialize["livenessProbe"] = o.LivenessProbe
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.ReadinessProbe != nil {
		toSerialize["readinessProbe"] = o.ReadinessProbe
	}
	if o.Resources != nil {
		toSerialize["resources"] = o.Resources
	}
	if o.SecurityContext != nil {
		toSerialize["securityContext"] = o.SecurityContext
	}
	if o.StartupProbe != nil {
		toSerialize["startupProbe"] = o.StartupProbe
	}
	if o.VolumeMounts != nil {
		toSerialize["volumeMounts"] = o.VolumeMounts
	}
	if o.WorkingDir != nil {
		toSerialize["workingDir"] = o.WorkingDir
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) Get() *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) Set(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container(val *ComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisComputeV1alpha1Container) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


