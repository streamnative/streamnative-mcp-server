//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference OfferReference references an offer object.
type ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference struct {
	Kind string `json:"kind"`
	Name string `json:"name"`
	Namespace *string `json:"namespace,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference(kind string, name string) *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference{}
	this.Kind = kind
	this.Name = name
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReferenceWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReferenceWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference {
	this := ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference{}
	return &this
}

// GetKind returns the Kind field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) SetName(v string) {
	o.Name = v
}

// GetNamespace returns the Namespace field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetNamespace() string {
	if o == nil || o.Namespace == nil {
		var ret string
		return ret
	}
	return *o.Namespace
}

// GetNamespaceOk returns a tuple with the Namespace field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) GetNamespaceOk() (*string, bool) {
	if o == nil || o.Namespace == nil {
		return nil, false
	}
	return o.Namespace, true
}

// HasNamespace returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) HasNamespace() bool {
	if o != nil && o.Namespace != nil {
		return true
	}

	return false
}

// SetNamespace gets a reference to the given string and assigns it to the Namespace field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) SetNamespace(v string) {
	o.Namespace = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["kind"] = o.Kind
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.Namespace != nil {
		toSerialize["namespace"] = o.Namespace
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) Get() *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) Set(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference(val *ComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisBillingV1alpha1OfferReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


