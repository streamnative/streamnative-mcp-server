//
// Copyright Â© 2023-2024 StreamNative Inc.
//

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup ConditionGroup Deprecated
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup struct {
	ConditionGroups []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup `json:"conditionGroups,omitempty"`
	Conditions []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition `json:"conditions"`
	Relation *int32 `json:"relation,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup(conditions []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition) *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup{}
	this.Conditions = conditions
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroupWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroupWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup{}
	return &this
}

// GetConditionGroups returns the ConditionGroups field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetConditionGroups() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup {
	if o == nil || o.ConditionGroups == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup
		return ret
	}
	return o.ConditionGroups
}

// GetConditionGroupsOk returns a tuple with the ConditionGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetConditionGroupsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup, bool) {
	if o == nil || o.ConditionGroups == nil {
		return nil, false
	}
	return o.ConditionGroups, true
}

// HasConditionGroups returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) HasConditionGroups() bool {
	if o != nil && o.ConditionGroups != nil {
		return true
	}

	return false
}

// SetConditionGroups gets a reference to the given []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup and assigns it to the ConditionGroups field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) SetConditionGroups(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) {
	o.ConditionGroups = v
}

// GetConditions returns the Conditions field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetConditions() []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition {
	if o == nil {
		var ret []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition
		return ret
	}

	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetConditionsOk() ([]ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition, bool) {
	if o == nil {
		return nil, false
	}
	return o.Conditions, true
}

// SetConditions sets field value
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) SetConditions(v []ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1RoleBindingCondition) {
	o.Conditions = v
}

// GetRelation returns the Relation field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetRelation() int32 {
	if o == nil || o.Relation == nil {
		var ret int32
		return ret
	}
	return *o.Relation
}

// GetRelationOk returns a tuple with the Relation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) GetRelationOk() (*int32, bool) {
	if o == nil || o.Relation == nil {
		return nil, false
	}
	return o.Relation, true
}

// HasRelation returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) HasRelation() bool {
	if o != nil && o.Relation != nil {
		return true
	}

	return false
}

// SetRelation gets a reference to the given int32 and assigns it to the Relation field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) SetRelation(v int32) {
	o.Relation = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.ConditionGroups != nil {
		toSerialize["conditionGroups"] = o.ConditionGroups
	}
	if true {
		toSerialize["conditions"] = o.Conditions
	}
	if o.Relation != nil {
		toSerialize["relation"] = o.Relation
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConditionGroup) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


