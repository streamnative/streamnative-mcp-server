// Licensed to the Apache Software Foundation (ASF) under one
// or more contributor license agreements.  See the NOTICE file
// distributed with this work for additional information
// regarding copyright ownership.  The ASF licenses this file
// to you under the Apache License, Version 2.0 (the
// "License"); you may not use this file except in compliance
// with the License.  You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing,
// software distributed under the License is distributed on an
// "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
// KIND, either express or implied.  See the License for the
// specific language governing permissions and limitations
// under the License.

/*
Api

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package sncloud

import (
	"encoding/json"
)

// ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config struct for ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config
type ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config struct {
	AuditLog *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog `json:"auditLog,omitempty"`
	// Custom accepts custom configurations.
	Custom *map[string]string `json:"custom,omitempty"`
	// FunctionEnabled controls whether function is enabled.
	FunctionEnabled *bool `json:"functionEnabled,omitempty"`
	LakehouseStorage *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig `json:"lakehouseStorage,omitempty"`
	Protocols *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig `json:"protocols,omitempty"`
	// TransactionEnabled controls whether transaction is enabled.
	TransactionEnabled *bool `json:"transactionEnabled,omitempty"`
	// WebsocketEnabled controls whether websocket is enabled.
	WebsocketEnabled *bool `json:"websocketEnabled,omitempty"`
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config{}
	return &this
}

// NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConfigWithDefaults instantiates a new ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ConfigWithDefaults() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config {
	this := ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config{}
	return &this
}

// GetAuditLog returns the AuditLog field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetAuditLog() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog {
	if o == nil || o.AuditLog == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog
		return ret
	}
	return *o.AuditLog
}

// GetAuditLogOk returns a tuple with the AuditLog field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetAuditLogOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog, bool) {
	if o == nil || o.AuditLog == nil {
		return nil, false
	}
	return o.AuditLog, true
}

// HasAuditLog returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasAuditLog() bool {
	if o != nil && o.AuditLog != nil {
		return true
	}

	return false
}

// SetAuditLog gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog and assigns it to the AuditLog field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetAuditLog(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1AuditLog) {
	o.AuditLog = &v
}

// GetCustom returns the Custom field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetCustom() map[string]string {
	if o == nil || o.Custom == nil {
		var ret map[string]string
		return ret
	}
	return *o.Custom
}

// GetCustomOk returns a tuple with the Custom field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetCustomOk() (*map[string]string, bool) {
	if o == nil || o.Custom == nil {
		return nil, false
	}
	return o.Custom, true
}

// HasCustom returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasCustom() bool {
	if o != nil && o.Custom != nil {
		return true
	}

	return false
}

// SetCustom gets a reference to the given map[string]string and assigns it to the Custom field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetCustom(v map[string]string) {
	o.Custom = &v
}

// GetFunctionEnabled returns the FunctionEnabled field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetFunctionEnabled() bool {
	if o == nil || o.FunctionEnabled == nil {
		var ret bool
		return ret
	}
	return *o.FunctionEnabled
}

// GetFunctionEnabledOk returns a tuple with the FunctionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetFunctionEnabledOk() (*bool, bool) {
	if o == nil || o.FunctionEnabled == nil {
		return nil, false
	}
	return o.FunctionEnabled, true
}

// HasFunctionEnabled returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasFunctionEnabled() bool {
	if o != nil && o.FunctionEnabled != nil {
		return true
	}

	return false
}

// SetFunctionEnabled gets a reference to the given bool and assigns it to the FunctionEnabled field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetFunctionEnabled(v bool) {
	o.FunctionEnabled = &v
}

// GetLakehouseStorage returns the LakehouseStorage field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetLakehouseStorage() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig {
	if o == nil || o.LakehouseStorage == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig
		return ret
	}
	return *o.LakehouseStorage
}

// GetLakehouseStorageOk returns a tuple with the LakehouseStorage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetLakehouseStorageOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig, bool) {
	if o == nil || o.LakehouseStorage == nil {
		return nil, false
	}
	return o.LakehouseStorage, true
}

// HasLakehouseStorage returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasLakehouseStorage() bool {
	if o != nil && o.LakehouseStorage != nil {
		return true
	}

	return false
}

// SetLakehouseStorage gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig and assigns it to the LakehouseStorage field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetLakehouseStorage(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1LakehouseStorageConfig) {
	o.LakehouseStorage = &v
}

// GetProtocols returns the Protocols field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetProtocols() ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig {
	if o == nil || o.Protocols == nil {
		var ret ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig
		return ret
	}
	return *o.Protocols
}

// GetProtocolsOk returns a tuple with the Protocols field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetProtocolsOk() (*ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig, bool) {
	if o == nil || o.Protocols == nil {
		return nil, false
	}
	return o.Protocols, true
}

// HasProtocols returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasProtocols() bool {
	if o != nil && o.Protocols != nil {
		return true
	}

	return false
}

// SetProtocols gets a reference to the given ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig and assigns it to the Protocols field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetProtocols(v ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1ProtocolsConfig) {
	o.Protocols = &v
}

// GetTransactionEnabled returns the TransactionEnabled field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetTransactionEnabled() bool {
	if o == nil || o.TransactionEnabled == nil {
		var ret bool
		return ret
	}
	return *o.TransactionEnabled
}

// GetTransactionEnabledOk returns a tuple with the TransactionEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetTransactionEnabledOk() (*bool, bool) {
	if o == nil || o.TransactionEnabled == nil {
		return nil, false
	}
	return o.TransactionEnabled, true
}

// HasTransactionEnabled returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasTransactionEnabled() bool {
	if o != nil && o.TransactionEnabled != nil {
		return true
	}

	return false
}

// SetTransactionEnabled gets a reference to the given bool and assigns it to the TransactionEnabled field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetTransactionEnabled(v bool) {
	o.TransactionEnabled = &v
}

// GetWebsocketEnabled returns the WebsocketEnabled field value if set, zero value otherwise.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetWebsocketEnabled() bool {
	if o == nil || o.WebsocketEnabled == nil {
		var ret bool
		return ret
	}
	return *o.WebsocketEnabled
}

// GetWebsocketEnabledOk returns a tuple with the WebsocketEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) GetWebsocketEnabledOk() (*bool, bool) {
	if o == nil || o.WebsocketEnabled == nil {
		return nil, false
	}
	return o.WebsocketEnabled, true
}

// HasWebsocketEnabled returns a boolean if a field has been set.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) HasWebsocketEnabled() bool {
	if o != nil && o.WebsocketEnabled != nil {
		return true
	}

	return false
}

// SetWebsocketEnabled gets a reference to the given bool and assigns it to the WebsocketEnabled field.
func (o *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) SetWebsocketEnabled(v bool) {
	o.WebsocketEnabled = &v
}

func (o ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.AuditLog != nil {
		toSerialize["auditLog"] = o.AuditLog
	}
	if o.Custom != nil {
		toSerialize["custom"] = o.Custom
	}
	if o.FunctionEnabled != nil {
		toSerialize["functionEnabled"] = o.FunctionEnabled
	}
	if o.LakehouseStorage != nil {
		toSerialize["lakehouseStorage"] = o.LakehouseStorage
	}
	if o.Protocols != nil {
		toSerialize["protocols"] = o.Protocols
	}
	if o.TransactionEnabled != nil {
		toSerialize["transactionEnabled"] = o.TransactionEnabled
	}
	if o.WebsocketEnabled != nil {
		toSerialize["websocketEnabled"] = o.WebsocketEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config struct {
	value *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config
	isSet bool
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) Get() *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config {
	return v.value
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) Set(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) {
	v.value = val
	v.isSet = true
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) IsSet() bool {
	return v.isSet
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config(val *ComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config {
	return &NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config{value: val, isSet: true}
}

func (v NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableComGithubStreamnativeCloudApiServerPkgApisCloudV1alpha1Config) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


